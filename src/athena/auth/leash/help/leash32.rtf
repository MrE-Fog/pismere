{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f5\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f44\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}
{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fmodern\fcharset238\fprq1 Courier New CE;}{\f55\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f57\fmodern\fcharset161\fprq1 Courier New Greek;}{\f58\fmodern\fcharset162\fprq1 Courier New Tur;}{\f59\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f60\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f61\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f78\fswiss\fcharset238\fprq2 Helvetica CE;}{\f79\fswiss\fcharset204\fprq2 Helvetica Cyr;}{\f81\fswiss\fcharset161\fprq2 Helvetica Greek;}{\f82\fswiss\fcharset162\fprq2 Helvetica Tur;}
{\f83\fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f84\fswiss\fcharset178\fprq2 Helvetica (Arabic);}{\f85\fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f254\fswiss\fcharset238\fprq2 Tahoma CE;}{\f255\fswiss\fcharset204\fprq2 Tahoma Cyr;}
{\f257\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f258\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f259\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f260\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f261\fswiss\fcharset186\fprq2 Tahoma Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 
Normal;}{\s1\ql \li120\ri0\sb280\sa120\sl-320\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \b\f5\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 heading 1;}{
\s2\ql \li0\ri0\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\uldb\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\s4\ql \fi720\li0\ri0\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\uldb\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 
heading 4;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \super \sbasedon10 endnote reference;}{\s16\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\snext0 Normal 2;}{\s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 para;}{\s18\ql \li120\ri0\sb80\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 endnote text;}{\s19\ql \li115\ri0\widctlpar\faauto\adjustright\rin0\lin115\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 Body Text 2;}{\*\cs20 \additive \fs16 \sbasedon10 annotation reference;}{\s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext21 annotation text;}{\*\cs22 \additive \b \sbasedon10 Strong;}{\s23\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \cbpat9 
\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 Document Map;}{\s24\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext24 footnote text;}{\*
\cs25 \additive \super \sbasedon10 footnote reference;}{\*\cs26 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s27\ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext27 
Body Text Indent 2;}{\s28\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext28 header;}{\s29\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 footer;}{\s30\ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 Body Text Indent 3;}{\s31\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext31 Body Text;}{
\s32\ql \fi-2520\li2700\ri1440\sb240\widctlpar\tx2694\faauto\adjustright\rin1440\lin2700\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext32 Block Text;}{\*\cs33 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}
{\*\listtable{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid122117028}{\list\listtemplateid-850080256\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace0\levelindent0{\leveltext
\leveltemplateid1542865830\'02\'00);}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-720\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2160\jclisttab\tx2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li4320\jclisttab\tx4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6480\jclisttab\tx6480 }{\listname ;}\listid996345973}{\list\listtemplateid-2057766650\listhybrid{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li900\jclisttab\tx900 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1620
\jclisttab\tx1620 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2340\jclisttab\tx2340 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3060\jclisttab\tx3060 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2
\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3780\jclisttab\tx3780 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4500\jclisttab\tx4500 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5220\jclisttab\tx5220 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5940\jclisttab\tx5940 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6660\jclisttab\tx6660 }{\listname ;}\listid2040350429}}{\*\listoverridetable
{\listoverride\listid122117028\listoverridecount0\ls1}{\listoverride\listid996345973\listoverridecount0\ls2}{\listoverride\listid2040350429\listoverridecount0\ls3}}{\*\revtbl {Unknown;}}{\info{\title $ # Why Use Leash}{\author cmcoury}{\operator tomt}
{\creatim\yr2000\mo8\dy25\hr10\min55}{\revtim\yr2000\mo11\dy15\hr16\min4}{\printim\yr2000\mo10\dy11\hr13\min55}{\version131}{\edmins1213}{\nofpages80}{\nofwords15220}{\nofchars86758}{\*\company MIT}{\nofcharsws106544}{\vern8247}}
\widowctrl\enddoc\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl \fet1
{\*\aftnsep \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsepc 
\par }}{\*\aftncn \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }}\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\sl-320\slmult0
\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f5\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f0\fs20\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Why use Leash?}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_PURPOSE}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_WHY_USE_LEASH32}}}{\cs15\b0\f0\fs20\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  why}}}{\f0\fs20 Why Use Leash32?
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Leash32 is a user interface for Kerberos on MS-Windows, which you can use to obtain Kerberos tickets and to change your Kerberos password.
\par 
\par Leash32 combines the functionality of several commands available in MIT's Athena environment. On Athena a user would use }{\uldb kinit}{\v ID_HELP_KINIT}{, }{\uldb klist}{\v ID_HELP_KLIST}{, }{\uldb kdestroy}{\v ID_HELP_KDESTROY}{, passwd or kpasswd}{\v 
ID_HELP_METER}{. Leash32 combines all of these functions into one user interface and also supports }{\uldb Dash-style notification}{\v ID_HELP_METER}{ of the user when tickets are nearing their expiration.
\par 
\par MIT has released or expects to release several applications for use at MIT that will use Kerberos authentication. These include Eudora for Windows, Zephyr, AFS and remote printing services. Other MIT departments may also be creating a
pplications that use Kerberos, and we expect Leash32 to complement these applications as well.
\par 
\par There are many ways to run Leash32. In addition to clicking on the Leash32 icon, you can start Leash32 from the Windows command Prompt or Run... option. Here, y
ou can specify command-line options as well; if you run Leash32 with the options -i or -kinit, it will bring up the window for you to get tickets upon startup.
\par 
\par You may wish to add Leash32 to your Windows Startup group. When doing so, use the Properties me
nu in the Program Manager to tell Windows to run Leash32 iconified. When Windows starts up, you will be prompted for your Kerberos username and password. Leash32 then obtains a Kerberos ticket for you. Thus, when you start any other Kerberized application
s, you will not be prompted for your password a second time.
\par 
\par Without Leash32 in your Startup group and without running it before using a Kerberized application, the application normally prompts you for your password. Some applications, like lpr, never prom
pt you for a password. These applications simply terminate with a message indicating that you are not authenticated. For these applications you must use a separate program, Leash32, to perform the authentication.
\par }{\b 
\par }{Leash32 is not a real login program, which
 would do much more than get tickets. A real login program helps to verify the integrity of your local disk system and performs additional set-up tasks. These are beyond the scope of Leash32. Leash32 simply allows you to obtain Kerberos tickets and to cha
nge your Kerberos password. 
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Application developers that are creating Kerberized applications may also find Leash32 helpful during development and debugging.}{\b\fs18\up6 \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Change Password Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_CHANGE_PASSWORD_COMMAND}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_CHANGE}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  change}}}{\b Change Password Command
\par }{
\par The Change Password command is found under the 
Action menu, and can also be accessed by clicking the Change Password button; this command changes your Kerberos password. (If you have a local password on the machine on which you are working, it will not change.)  
\par 
\par }{\uldb How To Choose a Password}{\v\uldb ID_}{\v HELP_CHOOSE}{.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18 How to Choose a Password}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_CHOOSE_PASSWORD}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_CHOOSE}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  choose}}}{\b How To Choose a Password...
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {Your passwords are the keys to many computers, from a bank machine to a multiuser mainframe to a server on a network. Your password helps to prove
 that you are who you say you are, and ensures your privacy.
\par Compromised passwords are the means by which most unauthorized (and unscrupulous) people gain access to a system. Someone logging on under your name has access not only to your computer files, bu
t to most of the facilities of the computer system. Since tampering can have far-reaching and serious consequences, it's important to take to heart the following guidelines for choosing a password.
\par }\pard \ql \fi-90\li180\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin180\itap0 {\b Do choose}{:
\par }\pard \ql \fi-720\li1080\ri720\widctlpar\faauto\adjustright\rin720\lin1080\itap0 {*\tab Something easy for you to remember with at least six characters.
\par *\tab Something obscure. For instance, you might deliberately misspell a term or use an odd character in an otherwise familiar term, such as "phnybon" instead of "funnybone." Or use a combination of two unrelated words or a combination of l
etters and numbers.
\par *\tab A combination of letters and numbers, or a phrase like "many colors" and then use only the consonants "mnYc0l0rz."
\par }\pard \ql \fi-690\li1080\ri720\widctlpar\faauto\adjustright\rin720\lin1080\itap0 {*\tab An acronym for your favorite saying, for example, "L!isn!" (Live! It's Saturday Night!)
\par }\pard \ql \fi-60\li180\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin180\itap0 {\b Don't choose}{:
\par }\pard \ql \fi-720\li1080\ri720\widctlpar\faauto\adjustright\rin720\lin1080\itap0 {*\tab Your name in any form - first, middle, last, maiden, spelled backwards, nickname or initials.
\par *\tab Your userid, or your userid spelled backwards.
\par *\tab Part of your userid or name.
\par *\tab Any common name, such as Joe.
\par *\tab The name of a close relative, friend, or pet.
\par *\tab Your phone or office number, address, birthday, or anniversary.
\par *\tab Your license-plate number, your social-security number, or any all numeral password.
\par *\tab Names from popular culture, e.g., spock, sleepy. 
\par *\tab Any word in a dictionary.
\par *\tab Passwords of fewer than four characters.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Mum's the Word}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
Never tell anyone your password -- not even your system administrator or account manager -- and don't write it down. Make sure you have chosen a password that you can remember. And, finally, change your password at regular intervals
\par 
\par }\pard \ql \li0\ri720\widctlpar\faauto\adjustright\rin720\lin0\itap0 {Reprinted from i/s, Vol. 4, No. 9,
\par May 1989. Revised March 1993.
\par Copyright C 1993 MIT Information Systems
\par Send comments or questions about this publication to
\par <comment-ispubs@mit.edu> or call x3-5150}{\v ID_HELP_CHOOSE_PASSWORD}{
\par }\pard\plain \s1\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f5\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Before You Begin...}{\b 
\par }{Remember that }{\i passwords are case-sensitive, }{and}{\i  }{note whether your keyboard has Caps Lock on.}{\b  }{Leash32 is}{\b  }{not programmed to inform you about the state of your Caps Lock key.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b How To Use Change Password...}{
\par }\pard \ql \fi-600\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b 1.}{\tab In Leash32, click on the Change Password button (t
he one that says abc and has a green arrow), type your username in the first field of the dialogue box that opens, and press Enter or click OK. You may start over anytime by clicking Restart, stop at any time by clicking Cancel, or get help at any time wi
th the Help button.
\par }{\b 2.}{\tab Type your }{\i current}{ password in the second field and press Enter or click OK.
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {The program checks the username and password you entered and notifies you if either is invalid.
\par }\pard \ql \fi-600\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b 3.}{\tab Type your }{\i new}{ password in the third field and press Enter or click OK.
\par }{\b 4}{.\tab Retype your }{\i new}{ password, to verify it, and press Enter or click OK.
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {Once you have entered the new password twice with consistent spellings, the Leash32 program replaces your old password with the new, }{\i if it is a strong password. }{
If Kerberos determines the password is weak, a message notifies you, and you need to}{\i  }{repeat steps 1 through 4 with a strong password, as described by the "How To Choose a Password" guidelines above.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 How Change Password Works...}{
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
When you type into the password fields of the dialog box, neither characters nor sounds echo back, thus keeping secret even the number of password characters. The program accepts only printable characters for new passwords, i.e., characters between
 ASCII codes 0x20 and 0x7E.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par When you have entered the new password twice consistently, the program attempts to change the password via a dialogue with the Kerberos administrative server. Some Kerberos sites, including MIT's Athena environment, check the p
assword's strength before allowing the change to take place and notifies you if it determines that the password is weak.}{\b\fs18 \page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  InitializeTickets Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_GET_TICKETS_COMMAND}}}{\cs15\b\up6 #{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_RENEW}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  renew}}}{\b Renew Ticket(s) Command, }{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+T}}}{\b Ctrl+T
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }{\f0 This command is found under the Action menu; it is also the first, far left icon in the toolbar. Use this command to obtain new Kerberos tickets or AFS tokens, or to renew your Kerberos tickets before they expire. 
\par 
\par When you select this command, Leash32 pops up a box requesting your username and password; if these are correct, it will obtain tickets for you. 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \s21\ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {See Also
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\uldb Kerberos tickets}{\v ID_HELP_TICKETS}{\uldb 
\par }{AFS tokens\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18 
 Leash Properties Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18 
 HID_LEASH_PROPERTIES_COMMAND}}}{\cs15\b\super  K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18 
 properties, Leash32}}}{\b Leash Properties\'85 Command, }{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+L}}}{\b Ctrl+L
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Here, in the Options menu, you 
can set a time server from which Leash32 will obtain the correct time.  Leash32 needs the correct time because of the time dependencies in Kerberos tickets.  When you specify a time server, Leash32 tries to get the time from that server when you next run 
the Synchronize Time command.  The default value for the time server is "time."
\par 
\par If access to a time server were to fail, Leash32 would notify you, and revert to the server "time."  Whichever server succeeds, Leash32 would tell you where it found the time.  See the Synchronize Time command for more information.\page }{\cs15\super $
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Properties Command}}#{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_KERBEROS_PROPERTIES_COMMAND}}}{\cs15\b\super  K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  properties, Kerberos}}}{\b 
Kerberos Properties Command, }{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18 
 key, Ctrl+K}}}{\b Ctrl+K
\par }{
\par When you select this from the Options menu, Leash32 will bring up a tabbed window. The box within this window has four tabs: Default Realm Configuration; Ticket Lifetime; Realm/Server Mapping; and DNS/Realm Mapping.
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\i Default Realm:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {There are two boxes here, the Kerberos Realm/Host Server box and the Computer Host/Domain Name box. 
\par 
\par Kerberos Realm/Host Server: In the Your Kerberos Realm field, select a Kerberos realm from the dropdown list.  The list is editable using the Realm/Server Mapping tab, below.   Leash32 automatically fills in your Kerberos server with 
the first server in the list under Realm/Host Maintenance. 
\par 
\par Computer Host/Domain Name: In the field labeled Your Computer's Host Name, enter your host name; in the Your Computer's Domain Name field, enter the DNS domain name.  You can find these values in
 the TCP/IP control panel under Win9x, the Network control panel under NT and ME, or the System panel, Network Identification tab under Win2K, all accessed by selecting Settings -> Control Panel from the Start button  of your computer.
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\i Ticket Lifetime:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {Here you set the lifetime, in minutes, of tickets.
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\i Realm/Server Mapping}{:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s30\ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Here, you have two list boxes: Kerberos Realms, and Servers Hosting a KDC.  To add a new realm, click on the Insert button beneath the Kerberos Realms list box.  In the dialog that a
ppears, type the name of the new realm and click OK.  However, for the realm to be inserted, it needs one or more servers.  Immediately after you enter the new realm name, you will be prompted for the names of servers in that realm.  If you do not enter a
t least one server, Leash32 will not insert the realm.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {
To add servers to an existing realm, select the realm from the Kerberos Realms list box and click the Insert button under Servers Hosting a KDC list box.  You will be prompted for the name of the new s
erver.  You can also remove servers, and designate either one or none as the administrative server.  By clicking and dragging on the server that you want to move, you can change their order; this is important because the server listed at the top appears i
n this window under the Default Realm Configuration tab as the value for Your Kerberos Server.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\i DNS/Realm Mapping}{: 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s30\ql \li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Each entry here consists of two portions: the DNS domain name (such as .mit.edu) followed by a space and the Kerberos realm (such as ATHENA.
MIT.EDU) which is used under that domain.  You can insert entries in this form, edit existing ones, or delete old entries.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Four Properties Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_KRB4_PROPERTIES_COMMAND}}}{\cs15\b\super  K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  properties, Kerberos4}}}{\b Kerberos v4 Properties\'85 Command, }{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+4}}}{\b Ctrl+4}{
\par 
\par }\pard\plain \s27\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
This command is accessible from the Options menu. Here, you can specify the location where you wish your Kerberos tickets to be stored - for instance, whether you want them on disk (and if so, where), or in a memory cache. Additionally
, you can supply the paths to the configuration files, krb.con and krbrealm.con.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Five Properties Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_KRB5_PROPERTIES_COMMAND}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  properties, Kerberos5}}}{\b Kerberos v5 Properties\'85 Command, }{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+5}}}{\b Ctrl+5}{
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s27\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {In the Options menu, this command has two tabs: File Location and Configuration Options.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s27\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
The File Location tab allows you to specify the location of the tickets, which can be stored in any location on disk or in the memory cache, and the configuration file.  
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par In the Configuration 
Options section, you can say whether or not you want the Kerberos 5 tickets obtained by Leash32 to be forwardable. Forwarding is an option only available with Kerberos 5. With this box checked, when you telnet or otherwise transfer to another machine, you
r tickets will be forwarded there. Therefore, you will not have to reauthenticate yourself. Otherwise, when you connect to the new machine, you will have to obtain new tickets.\page }{\cs15\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  AFS Properties Command}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_AFS_PROPERTIES_COMMAND}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  properties, AFS}}}{\b AFS Properties Command, }{\cs15\b\super K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+A}}}{\b Ctrl+A
\par }{
\par This choice, found on the Options menu when AFS runs, will cause Leash32 to bring up a window. Here, there is a radio button pair to enable or disable AFS tickets.  There is also an AFS Properties button to br
ing up the AFS Client Configuration program in order to alter settings for Client Properties, Cell Hosts, and Submounts.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Debug Window Option}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_DEBUG_WINDOW_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  debug}}}{\b Debug Window
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par When this item (found under the Action menu) is checked, the
 Leash32 Debug Window appears. From this window, commands that Leash32 issues to the Kerberos server are visible. Here, you can see exactly what Leash32 is doing. This action is useful if you are having a problem with Leash32 and want to see more exactly 
what is going on, or if you are writing Kerberized applications dependent on Kerberos tickets or the actions of Leash32.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Large Icons Option}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_LARGE_ICONS_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  large icons}}}{\b Large Icons
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {When this option, found on the View menu, is checked, the ic
ons and fonts in the main window (such as the picture of Kerberos) will be about twice as big as the minimal icon and font size.  Naturally, smaller icons allow many more tickets to fit into a nonscrolling window.  The default setting of Leash32 is Large 
Icons - this option is checked.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{
\f1\fs18  Toolbar Option}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_TOOLBAR_OPTION}}}{
\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  toolbar}}}{\b Toolbar}{
\par 
\par By default, this option on the View menu is selected. When it is checked, the toolbar containing icons for commonly used commands is visible. Otherwise, Leash32 hides it.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Status Bar Option}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_STATUS_BAR_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  status bar}}}{\b Status Bar}{
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
The Status Bar is on by default; turning it off causes the bar at the bottom of the Leash32 window (with the time remaining on any tickets that you might have) to disappear.\page }{\cs15\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\b\f1\fs18  }{\f1\fs18 Destroy Tickets/Tokens on Exit Option }}#{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_DESTROY_TICKETS_ON_EXIT}}}{\cs15\b\super K{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  destroy}}}{\b Destroy Tickets/Tokens on Exit Option}{
\par 
\par If this option is selected under the Options menu, Leash32 destroys your tickets and tokens when you shut down Leash32; otherwise, the tickets remain. This option is turned off by default. \page }{\cs15\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Upper Case Realm Name Option}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_UPPERCASE_REALM_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  uppercase}}}{\b Upper Case Realm Name Option}{
\par 
\par The default for this (accessible from the Options menu) is on; when this option is selected, the Kerberos realm name that you type (such as ATHENA.MIT.EDU) is converted to upper case regardless of how you type it.\page }{\cs15\super ${\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Low Ticket/Token Time Alarm Option}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_LOW_TICKET_ALARM_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  expiration}}}{\b Expiration Alarm Option}{
\par 
\par Leash32 will always pop up windows with warnings that your tickets are about to expire, beginning 15 minutes before the time of expiration and continuing every
 5 minutes. However, when this option is selected under the Options menu, a bell will ring as well. 
\par 
\par When you view your tickets and tokens, those shown in yellow are due to expire in less than 15 minutes; those in green have 15 minutes or greater. (A red,
 torn ticket is one you can have but currently do not; gray tickets are not available to you at the current time, because Leash32 or your machine is missing a requisite module or piece of functionality.)\page }{\cs15\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Synchronize Time Option}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_SCNCHRONIZE_TIME_OPTION}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  synchronize}}}{\b Synchronize Time}{
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
When you select this item under the Action menu, Leash32 synchronizes its time with the time server selected in Leash Properties\'85, under the Options menu. Because of the time dependence of Kerberos tickets, your compu
ter clock and the Kerberos server clock need to be within 4 minutes of each other for Kerberos to function properly. This function can also be performed with the clock icon on the toolbar and has no keyboard equivalent.\page }{\cs15\super $
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Reset Window Size/Pos Option}}#{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_RESET_WINDOW_OPTION}}}{\cs15\b\super K{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18 reset}}}{\b Reset Window Size/Pos Option}{
\par 
\par When you select this from the Options menu, the Leash32 window moves to its original size and position, near the upper left corner of the screen.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Krbcheck Option}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_KRBCHECK_OPTION}}}{\b Krbcheck Option}{
\par 
\par Found under the Options menu, this runs the krbcheck application. Krbcheck goes through your Kerberos setup and detects if there are any 
problems. If there are, it tells you about them, and offers help in solving them. Additionally, from within krbcheck Leash32 will tell you many pieces of information, such as the DNS name of your computer, whether many different files and options are avai
lable, about the ldap server, and much much more I don't understand.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Why Use}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  help, Why use Leash32}}}{\b Why Use Leash32
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {This command, found under the Help menu, starts Leash32 help (the document you are currently  viewing).\page }{
\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  About Kerberos}}}{\cs15\b\super K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  help, About Kerberos}}}{\b About Kerberos
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par This command, located in the Help menu, provides the Kerberos section of the Leash32 help document.
\par }\pard \ql \li-90\ri0\widctlpar\faauto\adjustright\rin0\lin-90\itap0 {\page }{\cs15\super ${\footnote\ftnalt \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs15\f1\fs18\super $}{\f1\fs18  About Leash32 Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{
\f1\fs18  HID_ABOUT_LEASH32_COMAND}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{
\f1\fs18  help, About Leash32}}}{\b About Leash32}{
\par 
\par When you access this window from the Help menu, you  see a Module list, three radio buttons, and a Properties button.  Modules are executables and dll files that Leash32 may require.  
\par 
\par The radio buttons let you choose to view a list of:
\par {\listtext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-173\li720\ri0\sb200\widctlpar\faauto\ls3\adjustright\rin0\lin720\itap0 {Leash Modules - displays the modules that Leash32 currently has loaded for its own use; 
\par {\listtext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}All Modules - displays Leash32 modules as well as those loaded by the OS;
\par {\listtext\pard\plain\f3\fs20 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Missing Modules - displays modules that Leash32 needs for complete functionality but that are not found.  (Leash32 can still function with som
e modules missing.).  This is useful if part of Leash32 is missing; you can find which files are needed to restore full functionality. 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {If you select a module and click on the Properties button, Leash32 displays the properties of the selected module - bot
h the general properties and those of this particular version.
\par \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  kdestroy.exe}}}{
\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  kdestroy, exe}}}{\b 
kdestroy.exe program
\par 
\par }{This is another way to destroy your tickets. Running this application will immediately destroy all tickets and tokens you might have, no matter how they were obtained.
\par \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  kinit.exe}}}{\cs15\b\super K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  kinit, exe}}}{\b kinit.exe program
\par 
\par }{This is a little program which will run a
 command-prompt, text-based version of the ticket initialization window.  (However, unlike in the graphical version, you do not have the option of changing the ticket lifetime.)  This can be useful if you have a slow computer, or if you are having difficu
lty with the graphical version for some reason.
\par \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Why Use}}}{\cs15\b\super K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  klist, exe}}}{\b klist.exe program
\par 
\par }{This application will quickly list all of the tickets you have.\page }{\b placeholder
\par 
\par }{foo\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18 
 Update Display Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_PDATE}}#
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_UPDATE_DISPLAY_CAMMAND}}K{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  update}}}{\b Update Display Command, }{\cs15\b\super K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  Key, F5}}}{\b F5
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Use this command (in the Actions menu, or the black rectangular icon) to update the display of your current Kerberos tickets.  You can also perform this function by clicking in the main Leash32 window.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Why Use It...
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
Although most end users will likely find this Leash32 feature irrelevant, application developers and support staff may occasionally find it to be useful.  For example, you may want an immediate status check of Kerberos tickets if you have just used comman
d-line }{\uldb kinit}{\v ID_HELP_KINIT}{ or }{\uldb kdestroy}{\v ID_HELP_KDESTROY}{ and want to check that they have functioned successfully.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b How It Works...}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {While Leash32 automatically checks the status of your Kerberos tickets every 30 seconds, the Update Display command forces an immediate status check.\page }{\cs15\b\super $
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Exit/End Leash Program}}#{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_EXIT}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_EXIT_COMMAND}}K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  exit}}}{\b Exit Command
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }\pard \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\f0 From the File menu, you can use this command to exit the Leash32 program.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Important Note...}{
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f0 Exiting the Leash32 program will }{\b\f0 not}{\f0  destroy your current
 Kerberos tickets. Unless you have selected this in the options menu, you need to use the destroy tickets command.}{\b\fs18\up6 \page }{\cs15\b\f0\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Destroy Tickets Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_DESTROY}}}{\cs15\b\f0\up6\super #{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_DESTROY_TICKETS_COMMAND}}}{\cs15\b\f0\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  destroy}}}{\b\f0 Destroy Ticket(s)/Token(s) Command, }{\cs15\b\f0\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  key, Ctrl+D}}}{\b\f0 Ctrl+D
\par }{\b 
\par }{\f0 Use this command, found on the icon bar or in the Action menu, to destroy all of the Kerberos tickets on your local machine. Leash32 asks your permission before doing this. Tickets for individual services may not be destroyed by the Leash32 applica
tion.
\par 
\par Once tickets are destroyed, you must get new tickets before Kerberized applications can again gain access to network services.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Important Note...}{
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f0 Exiting the Leash32 program will }{\b\f0 not}{\f0 
 destroy your current Kerberos tickets, unless you have selected this under the Options menu.\page }{\cs15\b\f0\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Leash Commands}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_COMMANDS}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_LEASH_COMMANDS}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  commands}}}{\b\f0 Leash32 Commands
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {File:
\par \tab }{\uldb Exit}{\v ID_HELP_EXIT}{
\par 
\par Action:
\par \tab }{\uldb Renew Ticket(s)}{\v ID_HELP_RENEW}{
\par \tab }{\uldb Destroy Ticket(s)}{\v ID_HELP_DESTROY}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\tab }{\uldb Change Password }{\v\uldb HID_CHANGE_PASSWORD_COMMAND}{\uldb 
\par }{\tab }{\uldb Synchronize Time }{\v\uldb HID_SCNCHRONIZE_TIME_OPTION}{\uldb 
\par }{\tab }{\uldb Update Display }{\v\uldb HID_UPDATE_DISPLAY_CAMMAND}{\uldb 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab }{\uldb Debug Window }{\v HID_DEBUG_WINDOW_OPTION}{\uldb 
\par }{
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {View:
\par \tab }{\uldb Large Icons }{\v\uldb HID_LARGE_ICONS_OPTION}{\uldb 
\par }{\tab }{\uldb Toolbar }{\v\uldb HID_TOOLBAR_OPTION}{\uldb 
\par }{\tab }{\uldb Status Bar }{\v\uldb HID_STATUS_BAR_OPTION}{\uldb 
\par }{
\par Options:
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\tab }{\uldb Leash Properties\'85}{\v\uldb HID_LEASH_PROPERTIES_COMMAND}{\uldb 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab }{\uldb Upper Case Realm Name }{\v\uldb HID_UPPERCASE_REALM_OPTION}{\uldb 
\par }{\tab }{\uldb Expiration Alarm }{\v\uldb HID_LOW_TICKET_ALARM_OPTION}{\uldb 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\tab }{\uldb Reset Window Size/Pos }{\v\uldb HID_RESET_WINDOW_OPTION}{\uldb 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab }{\uldb Destroy Tickets/Tokens on Exit }{\v\uldb HID_DESTROY_TICKETS_ON_EXIT}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\tab }{\uldb Kerberos Properties }{\v\uldb HID_KERBEROS_PROPERTIES_COMMAND}{\uldb 
\par }{\tab }{\uldb Kerberos v4 Properties\'85}{\v\uldb HID_KRB4_PROPERTIES_COMMAND}{\uldb 
\par }{\tab }{\uldb Kerberos v5 Properties\'85}{\v\uldb HID_KRB5_PROPERTIES_COMMAND}{\uldb 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab }{\uldb AFS Properties }{\v HID_AFS_PROPERTIES_COMMAND}{
\par }{\uldb 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\uldb Help:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab }{\uldb About Leash32...}{\v HID_ABOUT_LEASH32_COMAND}{\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  KERBEROS}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_KERBEROS}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_ABOUT_KERBEROS}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  about}}}{\b About Kerberos}{\b\i 
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {In Greek myth, the three-headed dog Kerberos guarded the gates of Hades. These days, Kerberos is an }{\uldb authentication}{\v 
ID_HELP_AUTHENTIC}{ service developed at MIT for open network computing environments such as MITnet. Kerberos verifies that you are who you claim to be by matching your username and password, called a Kerberos }{\uldb principal}{\v ID_HELP_PRINCIPAL}{
, to a private key encryption. 
\par When yo
u start an application that relies on Kerberos authentication, you must identify yourself by giving your Kerberos principal. The Kerberos service checks to make sure that your name and password match the encrypted key before it gives you access to the ser
vice you have requested. The security of the network environment is maintained by never sending your unencrypted Kerberos password over the network. 
\par To use the Athena system, you must have a Kerberos username and password. Some Macintosh and Windows applications at MIT that use Kerberos to authenticate a user's identity are Eudora, Zephyr and AFS.
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b See Also}{
\par }\pard \ql \li360\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 {\uldb An Authentication Service for Open Network Systems}{\v ID_HELP_USENIX88}{
\par }\pard \ql \li360\ri0\widctlpar\faauto\adjustright\rin0\lin360\itap0 {(This technical description of Kerberos, by Steiner, Neuman, and Schiller, is available via anonymous ftp from athena-dist.mit.edu, /pub/kerberos/doc/usenix.txt.)
\par }\pard \ql \li360\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 {\uldb Kerberos: How Does the Other Guy Know Who I Am?}{\v ID_HELP_SIPB}{.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {(This basic introduction to Kerberos and definitions of Kerberos-related terms is available in the SIPB publication }{\i An Inessential Guide to Athena}{.)\page }{\cs15\b\super $
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Leash Copyright}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_LCOPYRIGHT}}K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  copyright, Leash32}}}{\b Leash32 Copyright
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
This software is being provided to you, the LICENSEE, by the Massachusetts Institute of Technology (M.I.T) under the following license. By obtainin
g, using and/or copying this software, you agree that you have read, understood, and will comply with these terms and conditions: 
\par 
\par Permission to use, copy, modify and distribute this software and its documentation for any purpose and without fee or royalt
y is hereby granted, provided that you agree to comply with the following copyright notice and statements, including the disclaimer, and that the same appear on ALL copies of the software and documentation, including modifications that you make for intern
al use or for distribution:
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {Copyright 1992-2000 by the Massachusetts Institute of Technology. All rights reserved. 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par THIS SOFTWARE IS PROVIDED "AS IS", AND M.I.T. MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. By way of example, but not limita
tion, M.I.T. MAKES NO REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  

\par 
\par The
 name of the Massachusetts Institute of Technology or M.I.T. may NOT be used in advertising or publicity pertaining to distribution of the software. Title to copyright in this software and any associated documentation shall at all times remain with M.I.T.
, and USER agrees to preserve same.
\par 
\par Project Athena, Athena, Athena MUSE, Discuss, Hesiod, Kerberos, M
oira, OLC, X Window System, and Zephyr are trademarks of the Massachusetts Institute of Technology (MIT). No commercial use of these trademarks may be made without prior written permission of MIT.\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Export Restrictions and Source Code Access}}#{\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_EXPORT}}K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  export}}}{\b Kerberos Export Restrictions and Source Code Access
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Copyright (C) 1989-2000 by the Massachusetts Institute of Technology
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s31\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Export of this software from the United States of America may require a specific license from the United Stat
es Government. It is the responsibility of any person or organization contemplating export to obtain such a license before exporting.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par WITHIN THAT CONSTRAINT, permission to use, copy, modify, and distribute this software and its documentation for any purpo
se and without fee is hereby granted, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation, and that the name of M.I.T. not be used in advertising o
r publicity pertaining to distribution of the software without specific, written prior permission. M.I.T. makes no representations about the suitability of this software for any purpose. It is provided "as is" without express or implied warranty.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {Export of the documentation is not restricted.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {If you find bugs, please mail them to bugs@MIT.EDU.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par kerberos@ATHENA.MIT.EDU is a mailing list set up for discussing Kerberos issues. It is gatewayed to the Usenet newsgroup 'comp.protocols.kerberos'. If you prefer to read it via mail, send a request to kerberos-request@MIT.EDU to get added.
\par 
\par ==================================================
\par 
\par To retrieve the rest of the source code, which contains several compressed & split tar files, plus a patch file, follow these steps:
\par 
\par }\pard \ql \fi-630\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {1)\tab ftp to ATHENA-DIST.MIT.EDU (18.71.0.38) and log in as anonymous. Your password is your_email_address.
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {
\par {\listtext\pard\plain\s16 \fs20 \hich\af0\dbch\af0\loch\f0 2)\tab}}\pard\plain \s16\ql \fi-630\li720\ri0\sb80\sl-240\slmult0\nowidctlpar\faauto\ls2\adjustright\rin0\lin720\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f0 
cd to the /pub/kerberos directory and read the README.pc file. This file will contain further interactions.
\par }\pard \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\b\f0\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Reporting Problems With Leash}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_PROBLEMS}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  bugs}}}{\b\f0 Reporting Problems with Leash32
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }{If you've forgotten your password, or are unable to change your password\line because you're getting "Password Incorrect" messages, contact
\par \tab Athena User Accounts
\par }\pard\plain \s27\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab N42 (front desk)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab Office Hours MWF 2-5 PM, TR 9AM-12N
\par \tab 617-253-1325
\par \tab send mail to <accounts@mit.edu>
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Important Note...}{
\par Bring a picture ID with you when stopping by Athena User Accounts.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par To report bugs or for questions about this product, e.g., how to obtain new versions,\line or for problems not related to account information, contact
\par \tab Computing Help Desk
\par }\pard\plain \s27\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab N42 (front desk)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab }{\field{\*\fldinst { HYPERLINK "http://web.mit.edu/helpdesk" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001c00000068007400740070003a002f002f007700650062002e006d00690074002e006500640075002f00680065006c0070006400650073006b000000e0c9ea79f9bace118c8200aa004ba90b3800000068007400740070003a002f002f007700650062002e00
6d00690074002e006500640075002f00680065006c0070006400650073006b00000000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs26\ul\cf2 http://web.mit.edu/helpdesk}}}{
\par \tab 617-253-1102
\par \tab send mail to <net-help@mit.edu>\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{
\f1\fs18  Kerberos Copyright}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_KCOPYRIGHT
}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  copyright, kerberos}}}{\b Kerberos Copyright

\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
This software is being provided to you, the LICENSEE, by the Massachusetts Institute of Technology (M.I.T.) under the following license. By obtaining, using and/or copying
 this software, you agree that you have read, understood, and will comply with these terms and conditions: 
\par 
\par Permission to use, copy, modify and distribute this software and its documentation for any purpose and without fee or royalty is hereby granted, pr
ovided that you agree to comply with the following copyright notice and statements, including the disclaimer, and that the same appear on ALL copies of the software and documentation, including modifications that you make for internal use or for distribut
ion:
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {Copyright 1992-2000 by the Massachusetts Institute of Technology. All rights reserved. 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par THIS SOFTWARE IS PROVIDED "AS IS", AND M.I.T. MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. By way of example, but not limitation, M.I.T. MAKES NO R
EPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  
\par 
\par The name of the Massachuse
tts Institute of Technology or M.I.T. may NOT be used in advertising or publicity pertaining to distribution of the software. Title to copyright in this software and any associated documentation shall at all times remain with M.I.T., and USER agrees to pr
eserve same.
\par 
\par 
\par Project Athena, Athena, Athena MUSE, Discuss, Hesiod, Kerberos, Moira, OLC, X Window System, and Zephyr are trademarks of the Massachusetts Institute of Technology (MIT). No commercial use of these trademarks may be made without prior written
 permission of MIT.\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18 
 Kerberos Tickets}}}{\b  }{\cs15\b\super #{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18 
 ID_HELP_TICKETS}}}{\b  Kerberos Tickets
\par 
\par }{When you authenticate yourself with Kerberos, through either the Leash32 program or the kinit command, Kerberos gives you an initial Kerberos ticket. (A Kerberos ticket is an en
crypted protocol message that provides authentication.) Kerberos uses this ticket for network utilities such as telnet, ftp or email. The ticket transactions are done transparently, so you don't have to worry about their management.
\par 
\par Note, however, that ti
ckets expire. Privileged tickets, such as root instance tickets, expire in a few minutes, while tickets that carry more ordinary privileges may be good for several hours or a day, depending on the installation's policy. On Athena, the default time limit i
s 10 hours; if your login session extends beyond the time limit, you will have to reauthenticate yourself to Kerberos to get new tickets.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b See Also}{
\par }\pard \ql \li360\ri0\widctlpar\faauto\adjustright\rin0\lin360\itap0 {\uldb An Authentication Service}{\v ID_HELP_USENIX88}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\uldb How Does the Other Guy Know Who I Am?}{\v ID_HELP_SIPB}{\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Names}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_NAMES}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  names}}}{\b Kerberos Names
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }{A Kerberos name contains three parts. The first is the principal name, which is usually a user's or service's name. The second is the instance, which in the case of a user is usually null. Some users may have priv
ileged instances, however, such as "root" or "admin." In the case of a service, the instance is the name of the machine on which it runs; i.e. there can be an }{\b rlogin}{
 service running on the machine ABC, which is different from the rlogin service running on 
the machine XYZ. The third part of a Kerberos name is the realm. The realm corresponds to the Kerberos service providing authentication for the principal. For example, at MIT there is a Kerberos running at the Laboratory for Computer Science and one runni
ng at Project Athena.
\par 
\par When writing a Kerberos name, the principal name is separated from the instance (if not null) by a period, and the realm (if not the local realm) follows, preceded by an "@" sign. The following are examples of valid Kerberos names:
\par }\pard \ql \li2160\ri0\widctlpar\faauto\adjustright\rin0\lin2160\itap0 {billb
\par jis.admin
\par srz@LCS.MIT.EDU
\par treese.root@ATHENA.MIT.EDU
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Leash Screen Display (Kerberometer and Dash Notification)}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_METER}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  display}}}{\b Leash32 Screen Display (Kerberometer and Dash Notification)
\par 
\par }\pard\plain \s27\ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {The top of the window has the name of the appl
ication, Leash32, and the date and time.  Below that is a menu bar and a toolbar, followed by the main Leash32 program screen.  The screen has scroll bars, so you can view all of your tickets.  If all of this information fits into the window in its curren
t size, the scroll bars do not appear.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
The main Leash32 program screen, when first displayed, shows a top-level outline entry as a tree root for each user's set of Kerberos tickets.  This entry appears with a "+" icon and a Kerberos icon to its left.  Clic
k on this plus icon of a line to expand the branch, displaying a "-" icon.  To retract the branch click on the minus sign.
\par 
\par Within a user principal, the program screen displays categories of tickets, and for each ticket displays information about the current ticket status, including the time that it was issued, the time it will expire, and the service principal and flags.  

\par 
\par If you want an update of your ticket status (if, for instance, you destroyed your tickets and want to see that reflected, or want to s
ee your new tickets), you can click either in the window or the Update Display command icon on the toolbar.  Otherwise, the display automatically updates itself every 30 seconds.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {At the bottom right of the window, is a display of the remaining time of you
r tickets (both Kerberos 4 and Kerberos 5, as some programs obtain only Kerberos 4 tickets, these are not necessarily the same) in hours, minutes, and seconds.  This used to be known as the }{\b Kerberometer}{ 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {Each ticket is described and represented by an icon of a little ticket. The color of the ticket changes based on its viability: 
\par }\pard \ql \li2160\ri0\widctlpar\faauto\adjustright\rin0\lin2160\itap0 {green = normal
\par yellow = tickets are within 15 minutes of expiration
\par red, torn = tickets have expired, or you have no tickets
\par gray = these tickets are not available to you
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
At 15, 10, and 5 minutes before your Kerberos tickets expire, a screen pops up to warn that your Kerberos tickets will expire soon and to give you the opportunity to renew them.  This used to be known as}{\b  Dash-style notification}{.\page }{
\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos:  How does the 
other guy know who I am?}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_SIPB}}K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  guide}}}{\b 
Kerberos: How Does the Other Guy Know Who I Am?
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }{A portion of the text below was copied with permission from }{\i An Inessential Guide to Athena}{ (5th edition) published by the Student Information Processing Board.
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
Athena has developed a system known as Kerberos to provide for security on a physically insecure network. A complete description of the mechanisms used by Kerberos to provide this security is beyond the scope of this document. This section descr
ibes why Kerberos is necessary in the Athena environment, the theory behind Kerberos (with pointers to further information), and the user commands which interface to Kerberos. It also gives hints for using Kerberos more effectively.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b Why}{ }{\b Kerberos}{ }{\b is }{\cs15\super #{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_AUTHENTIC}}}{\fs18\up6  }{\b needed}{
. Most moderately-sized to large computer systems use some form of password protection scheme to }{\i authenticate }{users; that is, they require a user who wishes to log in to give both his name and a secret password which only he and the c
omputer system know. Anyone who happens to know the password can claim to be that user. It is therefore desirable to prevent people from listening in on the conversation between the computer and the user's terminal or workstation.
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {This is relatively easy 
in the case of terminals directly connected to the machine, since each terminal has its own cable. In a local-area network, several (typically between 10 and 200) computers share one cable, and any computer can listen in on any network traffic. With the a
d
vent of network monitoring packages for IBM PC's and similar machines, it is relatively easy for a determined user to set up a program to listen in on a network for any and all passwords being sent over. This would allow an intruder to masquerade as someo
ne else, violating their privacy and perhaps stealing information (academic or otherwise). }{\b Note that THE ELECTRONIC COMMUNICATIONS PRIVACY ACT of 1986 makes this a Federal crime}{ punishable by lots of nasty stuff (ask your lawyer for details).

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {In addition, 
since Athena uses a workstation-based model of computation, with most operations taking place on a single-user workstation with occasional requests (for files, etc.) going to other "server" machines, Athena needed to set up some way to allow users to }{
\i prove}{ their identity to such server machines.
\par 
\par }{\b A few definitions}{. Knowledge of the following terms is not essential for use of Kerberos but is helpful in understanding what is going on:
\par }\pard \s17\ql \fi-1440\li1440\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin1440\itap0 {\b user:}{\tab A human being who wishes to use a computer system. A user, through hi
s workstation, may make a series of requests to several servers in the course of a session, and would like to avoid (due to sheer laziness, among other things) having to type his password to each machine in question.
\par }{\b service:}{\tab A program or set of programs running on a computer which is accessible over the network. The service would like to know with certainty that the workstation to which it is providing the service is really being used by the }{\b user}{
 who claims to be logged in on the workstation. Note that workstations are }{\i not }{services, and thus one may not use Kerberos to log into them over the network.
\par }{\cs15\super #{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_PRINCIPAL}}}{\fs18\up6  }{
\b principal:}{\tab An entity which can both prove its identity and verify the identities of other principals who wish to communicate with it; each }{\b user}{ and each }{\b service}{ registered with Kerberos is thus a principal.
\par }{\b ticket:}{ \tab A block of data which, when given to a user, enables him to prove his identity to a service. In the Athena environment tickets are stored in files in the /tmp directory, and are
 automatically erased on log-out. On DOS and Windows tickets are stored in RAM in an area of memory reserved by the Kerberos cache. They are automatically erased when the computer is rebooted or when the user issues the destroy tickets command from Leash3
2
. They may also be destroyed from DOS by typing kdestroy. They contain information which must be considered private to the user, and thus the file should be protected. As they contain a time stamp, they cease to be valid after a limited time. One ticket i
s needed for each service; tickets are used to build }{\b authenticators}{, which are sent over the network to the service.
\par }{\b authenticator:}{ \tab A block of data which a user's workstation sends over the network to a specific service to prove that the workstation really
 is in use by that user. An authenticator expires after five minutes. One authenticator is typically built per session of use of a service; once the service decodes the authenticator, it generally permits the user to operate for as long as she wants. This
 behavior is not in any way mandated by the Kerberos suite of programs and libraries (it is just a detail of the implementation), but it is convenient and considered secure enough for the Athena environment.
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b How It Works...
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
Kerberos uses a standard encryption-based authentication technique with a few variations designed to increase ease of use across administrative entities and reduce the number of possible "attacks" on the system. The system uses cryptographically sealed }{
\i tickets}{ and }{\i authenticators}{\} which may be passed over the network and decrypted only by a user or machine which knows the appropriate encryption/decryption key.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Using Kerberos...}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {Most of the programs in use with Kerberos are located in the standard user path.
 Some of the programs installed in the standard locations for 4.3BSD are actually versions of the programs converted to use Kerberos, so that most of your interaction with Kerberos will be "under the covers'" and should not look or act any different than 
standard 4.3BSD.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Registering with Kerberos...
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
If you have an account registered with Athena, you are registered with Kerberos. If you do not have an Athena account, talk to the Athena Accounts Administrator at x3-1325 to either set up an Athena account or register with Kerberos.
\par 
\par }\pard \s17\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
Once registered with Kerberos, tickets are obtained by the login program every time you log onto a workstation. You can also manually obtain new tickets (which you usually do only if your old ones have expired, 10 hours after you l
og in) by running the program}{\f2  kinit}{. It prompts for a username, requests an initial ticket from Kerberos, and then asks for your password. If you are not registered with Kerberos, it will print}{\f2  Principal unknown (Kerberos)}{
. Unless you mistype your username, this should not happen. To correct this, or any other errors, contact a Consultant or the Athena Accounts Administrator.\page }{\cs15\b\f0\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  How Kerberos Shares Tickets}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_SHARE_TICKETS}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  tickets}}}{\b\f0 How Kerberos Shares Tickets
\par 
\par }\pard\plain \s31\ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Why Do It...
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
In the Athena environment Kerberos tickets are stored either on the local disk drive or in the workstation's memory. Tickets are obtained when the user logs into the Athena environment. Thus, during normal operation, users enter a password once only. On s
ome other platforms, however, the tickets are stored separately in each Kerberized application, and each time one of these Kerberized applications starts, the user must re-enter the password.
\par 
\par When the developers at Brown University began porting the Kerberos libraries to DOS and Windows, they elected to create a system that enables all applications to share Kerberos tickets. With this system }{\i the user enters a password once only}{
 for an entire suite of Kerberized applications. Thus, they created the program Kerbmem, whose first task is reserving memory for the ticket storage before trying to obtain tickets and before loading Windows.
\par 
\par (The Brown developers' second reason for developing Kerbmem is that they wanted to store Kerberos tickets in shared RAM memory on the PC; they wanted to avoid storing the tickets on the local disk since PCs are inherently insecure.)
\par }\pard\plain \s16\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b How It's Done...}{
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Kerbmem has been replaced in MIT's Kerberos with a cache manager.\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  KINIT Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_KINIT}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  kinit, man}}}{\b KINIT Command
\par 
\par }{(from UNIX man page)
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f2 
\par User Commands  KINIT ( 1 )
\par 
\par NAME
\par  kinit - obtain and cache Kerberos ticket-granting ticket
\par 
\par SYNOPSIS
\par  kinit [-5] [-4] [-V] [-l lifetime] [-s start_time] [-r
\par  renewable_life] [-p | -P] [-f | -F] [-A] [-v] [-R] [-k [-t
\par  keytab_file]] [-c cache_name] [-S service_name] [principal]
\par 
\par DESCRIPTION
\par  kinit obtains and caches an initial ticket-granting ticket for
\par  principal.  The typicaldefault behavior Kerberos 5 tickets. However,
\par  if kinit was built with both Kerberos 4 support and with the default
\par  behavior of acquiring both types of tickets, it will try to acquire
\par  both Kerberos 5 and Kerberos 4 by default.  Any documentation
\par  particular to Kerberos 4 does not apply if Kerberos 4 support was not
\par  built into kinit.
\par 
\par OPTIONS
\par  -5 get Kerberos 5 tickets.  This overrides whatever the default
\par  built-in behavior may be.  This option may be used with -4
\par 
\par  -4 get Kerberos 4 tickets.  This overrides whatever the default
\par  built-in behavior may be.  This option is only available if kinit was
\par  built with Kerberos 4 compatibility.  This option may be used with -5
\par 
\par  -V display verbose output.
\par 
\par  -l lifetime
\par  requests a ticket with the lifetime lifetime.  The value for lifetime
\par  must be followed immediately by one of the following delimiters:
\par 
\par  s seconds
\par  m minutes
\par  h hours
\par  d days
\par 
\par  as in "kinit -l 90m".  You cannot mix units; a value of `3h30m' will
\par  result in an error.
\par 
\par  If the -l option is not specified, the default ticket lifetime
\par  (configured by each site) is used.  Specifying a ticket lifetime
\par  longer than the maximum ticket lifetime (configured by each site)
\par  results in a ticket with the maximum lifetime.
\par 
\par  -s start_time
\par  requests a postdated ticket, valid starting at start_time.  Postdated
\par  tickets are issued with the invalid flag set, and need to be fed back
\par  to the kdc before use.  (Not applicable to Kerberos 4.)
\par 
\par  -r renewable_life
\par  requests renewable tickets, with a total lifetime of renewable_life.
\par  The duration is in the same format as the -l option, with the same
\par  delimiters.  (Not applicable to Kerberos 4.)
\par 
\par  -f request forwardable tickets.  (Not applicable to Kerberos 4.)
\par 
\par  -F do not request forwardable tickets.  (Not applicable to Kerberos
\par   4.)
\par 
\par  -p request proxiable tickets.  (Not applicable to Kerberos 4.)
\par 
\par  -P do not request proxiable tickets.  (Not applicable to Kerberos 4.)
\par 
\par  -A request address-less tickets.  (Not applicable to Kerberos 4.)
\par 
\par  -v requests that the ticket granting ticket in the cache (with the
\par  invalid flag set) be passed to the kdc for validation.  If the ticket
\par  is within its requested time range, the cache is replaced with the
\par  validated ticket.  (Not applicable to Kerberos 4.)
\par 
\par  -R requests renewal of the ticket-granting ticket.  Note that an
\par  expired ticket cannot be renewed, even if the ticket is still within
\par  its renewable life.  When using this option with Kerberos 4, the
\par  kdc must support Kerberos 5 to Kerberos 4 ticket conversion.
\par 
\par  -k [-t keytab_file]
\par  requests a host ticket, obtained from a key in the local host's
\par  keytab file.  The name and location of the keytab file may be
\par  specified with the -t keytab_file option; otherwise the default name
\par  and location will be used.  When using this option with Kerberos 4,
\par  the kdc must support Kerberos 5 to Kerberos 4 ticket conversion.
\par 
\par  -c cache_name
\par  use cache_name as the Kerberos 5 credentials (ticket) cache name and
\par  location; if this option is not used, the default cache name and
\par  location are used.
\par 
\par  The default credentials cache may vary between systems.  If the
\par  KRB5CCNAME environment variable is set, its value is used to name the
\par  default ticket cache.  Any existing contents of the cache are
\par  destroyed by kinit.  (Note: The default name for Kerberos 4 comes
\par  from the KRBTKFILE environment variable.  This option does not apply
\par  to Kerberos 4.)
\par 
\par  -S service_name
\par  specify an alternate service name to use when getting initial
\par  tickets.  (Applicable to Kerberos 5 or if using both Kerberos 5 and
\par  Kerberos 4 with a kdc that supports Kerberos 5 to Kerberos 4 ticket
\par  conversion.)
\par 
\par ENVIRONMENT
\par  Kinit uses the following environment variables:
\par 
\par  KRB5CCNAME Location of the Kerberos 5 credentials (ticket) cache.
\par 
\par  KRBTKFILE Filename of the Kerberos 4 credentials (ticket) cache.
\par 
\par FILES
\par  /tmp/krb5cc_[uid] default location of Kerberos 5 credentials cache
\par  ([uid] is the decimal UID of the user).
\par 
\par  /tmp/tkt[uid] default location of Kerberos 4 credentials cache ([uid]
\par  is the decimal UID of the user).
\par 
\par  /etc/krb5.keytab
\par  default location for the local host's keytab file.
\par 
\par SEE  ALSO
\par  klist(1), kdestroy(1), krb5(3)
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  KLIST Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_KLIST}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  klist, man}}}{\b KLIST Command
\par 
\par }{(from UNIX man page)
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f2 
\par User Commands  KLIST ( 1 )
\par 
\par NAME
\par  klist - list cached Kerberos tickets
\par 
\par SYNOPSIS
\par  klist [-5] [-4] [-e] [[-c] [-f] [-s] [-a [-n]]] [-k [-t] [-K]]
\par  [cache_name | keytab_name]
\par 
\par DESCRIPTION
\par 
\par  Klist lists the Kerberos principal and Kerberos tickets held in a
\par  credentials cache, or the keys held in a keytab file.  If klist was
\par  built with Kerberos 4 support, the default behavior is to list both
\par  Kerberos 5 and Kerberos 4 credentials.  Otherwise, klist will default
\par  to listing only Kerberos 5 credentials.
\par 
\par OPTIONS
\par  -5 list Kerberos 5 credentials.  This overrides whatever the default
\par  built-in behavior may be.  This option may be used with -4
\par 
\par  -4 list Kerberos 4 credentials.  This overrides whatever the default
\par  built-in behavior may be.  This option is only available if kinit was
\par  built with Kerberos 4 compatibility.  This option may be used with -5
\par 
\par  -e displays the encryption types of the session key and the ticket
\par  for each credential in the credential cache, or each key in the
\par  keytab file.
\par 
\par  -c List tickets held in a credentials cache.  This is the default if
\par  neither -c nor -k is specified.
\par 
\par  -f shows the flags present in the credentials, using the following
\par  abbreviations:
\par 
\par  F Forwardable
\par  f forwarded
\par  P Proxiable
\par  p proxy
\par  D postDateable
\par  d postdated
\par  R Renewable
\par  I Initial
\par  i invalid
\par 
\par  -s causes klist to run silently (produce no output), but to still set
\par  the exit status according to whether it finds the credentials cache.
\par  The exit status is `0' if klist finds a credentials cache, and `1' if
\par  it does not.
\par 
\par  -a display list of addresses in credentials.
\par 
\par  -n show numeric addresses instead of reverse-resolving addresses.
\par 
\par  -k List keys held in a keytab file.
\par 
\par  -t display the time entry timestamps for each keytab entry in the
\par  keytab file.
\par 
\par  -K display the value of the encryption key in each keytab entry in
\par  the keytab file.
\par 
\par  If cache_name or keytab_name is not specified, klist will display the
\par  credentials in the default credentials cache or keytab file as
\par  appropriate.  If the KRB5CCNAME environment variable is set, its
\par  value is used to name the default ticket cache.
\par 
\par ENVIRONMENT
\par  Klist uses the following environment variables:
\par 
\par  KRB5CCNAME Location of the Kerberos 5 credentials (ticket) cache.
\par 
\par  KRBTKFILE Filename of the Kerberos 4 credentials (ticket) cache.
\par 
\par FILES
\par  /tmp/krb5cc_[uid] default location of Kerberos 5 credentials cache
\par  ([uid] is the decimal UID of the user).
\par 
\par  /tmp/tkt[uid] default location of Kerberos 4 credentials cache ([uid]
\par  is the decimal UID of the user).
\par 
\par  /etc/krb5.keytab
\par  default location for the local host's keytab file.
\par 
\par SEE  ALSO
\par  kinit(1), kdestroy(1), krb5(3)
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  KDESTROY Command}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_KDESTROY}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  kdestroy, man}}}{\b KDESTROY Command
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {(from UNIX man page)
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f2 
\par User Commands  KDESTROY ( 1 )
\par 
\par NAME
\par  kdestroy - destroy Kerberos tickets
\par 
\par SYNOPSIS
\par  kdestroy [-5] [-4] [-q] [-c cache_name]
\par 
\par DESCRIPTION
\par 
\par  The kdestroy utility destroys the user's active Kerberos
\par  authorization tickets by writing zeros to the specified credentials
\par  cache that contains them.  If the credentials cache is not specified,
\par  the default credentials cache is destroyed.  If kdestroy was built with
\par  Kerberos 4 support, the default behavior is to destroy both Kerberos 5
\par  and Kerberos 4 credentials.  Otherwise, kdestroy will default to
\par  destroying only Kerberos 5 credentials.
\par 
\par OPTIONS
\par 
\par  -5 destroy Kerberos 5 credentials.  This overrides whatever the
\par     default built-in behavior may be.  This option may be used with -4
\par 
\par  -4 destroy Kerberos 4 credentials.  This overrides whatever the
\par     default built-in behavior may be.  This option is only available
\par     if kinit was built with Kerberos 4 compatibility.  This option may
\par     be used with -5
\par 
\par  -q Run quietly.  Normally kdestroy beeps if it fails to destroy the
\par     user's tickets.  The -q flag suppresses this behavior.
\par 
\par  -c cache_name
\par     use cache_name as the credentials (ticket) cache name and
\par     location; if this option is not used, the default cache name and
\par     location are used.
\par 
\par  The default credentials cache may vary between systems.  If the
\par  KRB5CCNAME environment variable is set, its value is used to name the
\par  default ticket cache.
\par 
\par  Most installations recommend that you place the kdestroy command in
\par  your .logout file, so that your tickets are destroyed automatically
\par  when you log out.
\par 
\par ENVIRONMENT
\par  Kdestroy uses the following environment variables:
\par 
\par  KRB5CCNAME Location of the Kerberos 5 credentials (ticket) cache.
\par 
\par  KRBTKFILE Filename of the Kerberos 4 credentials (ticket) cache.
\par 
\par FILES
\par  /tmp/krb5cc_[uid] default location of Kerberos 5 credentials cache
\par  ([uid] is the decimal UID of the user).
\par 
\par  /tmp/tkt[uid] default location of Kerberos 4 credentials cache ([uid]
\par  is the decimal UID of the user).
\par 
\par SEE  ALSO
\par  kinit(1), klist(1), krb5(3)
\par 
\par BUGS
\par  Only the tickets in the specified credentials cache are
\par  destroyed.  Separate ticket caches are used to hold root instance and
\par  password changing tickets.  These should probably be destroyed too,
\par  or all of a user's tickets kept in a single credentials cache.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Using Kerberos in a Command Prompt Environment}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_DOS_KERBEROS}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  DOS commands}}}{\b Using Kerberos in a Command Prompt Environment
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {Command Prompt commands that are available to perform Kerberos functions
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\tab }{\uldb KINIT}{\v ID_HELP_KINIT}{ - Kerberos log-in utility
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab }{\uldb KLIST}{\v ID_HELP_KLIST}{ - list currently held Kerberos tickets
\par \tab }{\uldb KDESTROY}{\v ID_HELP_KDESTROY}{ - destroy Kerberos tickets}{\v ID_HELP_SHARE_TICKETS}{
\par }\pard\plain \s1\ql \li0\ri0\sl-320\slmult0\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f5\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 \page }{\cs15\f0\fs20\super ${\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Help on Using Leash Online Help}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_LEASH_HELP}}K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  help, online}}}{\f0\fs20 How To Use Leash32 Online Help
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }{\f0 In Leash32, }{\b\f0 F1}{\f0  }{\v\f0 and }{\b\v\f0 Shift-F1}{\v\f0  }{\f0 are the online Help keys. Here's what they do:
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard \ql \li0\ri0\widctlpar\tx2700\faauto\adjustright\rin0\lin0\itap0 {\b Pressing F1...}{\tab }{\b gets you...}{
\par }\pard\plain \s32\ql \fi-2520\li2700\ri1440\sb240\widctlpar\tx2694\faauto\adjustright\rin1440\lin2700\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {in the Leash32 main window\tab Leash32 Help Topics -- click the one you need.
\par }\pard\plain \ql \fi-2520\li2700\ri1440\sb240\widctlpar\tx2694\faauto\adjustright\rin1440\lin2700\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {in Leash32 Help Topics\tab 
Contents for How To Use Help -- list of topics explaining the features and functions of Windows online help -- click the one you need.
\par in a Leash32 dialogue box\tab context-sensitive help, i.e., the specific topic that explains where you are and what you're doing.
\par at an error message\tab explanation for the error message.
\par }\pard \ql \li-24\ri0\sb240\widctlpar\tx2694\tx8184\faauto\adjustright\rin0\lin-24\itap0 {\b\v [Hidden, since not implemented]Pressing Shift-F1...gets you...}{\v 
in the Leash32 main window your cursor (arrow pointer) changes to an arrow/ question mark. Use it to get context-sensitive Help for a Leash32 menu bar button or command in a pull-down menu.}{\b\fs18\up6 \page }{\cs15\b\super ${\footnote\ftnalt 
\pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Leash Program}}#{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_LEASH}}}{\cs15\b\up6\super #{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  HID_LEASH_PROGRAM}}}{\cs15\b\super K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  Leash32 program}}}{\b Leash32 Program
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\fs22 leash}{\i\fs22  \\'le-sh\\
 n [ME lees, leshe, fr. OF laisse, fr. laissier] 1: a line for leading or restraining an animal 2a: a set of three animals (as greyhounds, 
foxes, bucks, or hares) 2b: a set of three - leash vt 3: a Windows program developed at MIT to manage a user's Kerberos tickets.}{
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Leash32 Help Topics
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\uldb Leash32 Commands}{\v ID_HELP_COMMANDS}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\uldb Leash32 Screen Display (Kerberometer and Dash Notification)}{\v ID_HELP_METER}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\uldb How To Use Leash32 Online Help}{\v ID_HELP_LEASH_HELP}{\uldb 
\par Leash32 Copyright}{\v ID_HELP_LCOPYRIGHT}{
\par }{\uldb Acknowledgments}{\v ID_HELP_PEOPLE}{\uldb 
\par Reporting Problems with Leash}{\v ID_HELP_PROBLEMS}{
\par }{\b\fs24 
\par }{\b Kerberos Help Topics}{\v ID_HELP_LCOPYRIGHT}{
\par }{\uldb About Kerberos}{\v ID_HELP_KERBEROS}{
\par }{\uldb Kerberos Names}{\v ID_HELP_NAMES}{\uldb 
\par Kerberos Tickets}{\v ID_HELP_TICKETS}{\uldb 
\par Using Kerberos in a Command Prompt Environment}{\v ID_HELP_DOS_KERBEROS}{\uldb 
\par How Kerberos Shares Tickets}{\v ID_HELP_SHARE_TICKETS}{\uldb 
\par Kerberos Copyright}{\v ID_HELP_KCOPYRIGHT}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\uldb Kerberos Export Restrictions and Source Code Access}{\v ID_HELP_EXPORT}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\uldb Kerberos Timing Issues}{\v ID_HELP_TIME}{\page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  An Authentication Service for Open Network Systems}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_USENIX88}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  Kerberos}}}{\b\i Kerberos}{\b : An Authentication Service for Open Network Systems
\par }{\b\fs24 
\par }{\fs24 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\i Jennifer G. Steiner}{
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {Project Athena 
\par Massachusetts Institute of Technology
\par Cambridge, MA 02139 
\par steiner@ATHENA.MIT.EDU
\par 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\i Clifford Neuman}{ *
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {Department of Computer Science, FR-35
\par University of Washington
\par Seattle, WA 98195
\par bcn@CS.WASHINGTON.EDU
\par 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {Jeffrey I. Schiller
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {Project Athena
\par Massachusetts Institute of Technology
\par Cambridge, MA 02139
\par jis@ATHENA.MIT.EDU
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs24 
\par 
\par }{\fs16 * Clifford Neuman was a member of the Project Athena staff during the design and initial implementation phase of }{\i\fs16 Kerberos.
\par }{\fs24  
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\i\fs24 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\i\fs24 ABSTRACT
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs24 
\par }\pard \ql \li720\ri720\widctlpar\faauto\adjustright\rin720\lin720\itap0 {\tab In an open network computing environment, a workstation cannot be trusted to identify its users correctly to network services. }{\i Kerberos}{
 provides an alternative approach whereby a trusted third-party authentication service is used to verify users' identities. This paper gives an overview of the }{\i Kerberos}{ 
authentication model as implemented for MIT's Project Athena. It describes the protocols used by clients, servers, and }{\i Kerberos}{ to achieve authentication. It also describes the management and replication of the database required. The views of }{\i 
Kerberos}{ as seen by the user, programmer, and administrator are described. Finally, the role of }{\i Kerberos}{ in the larger Athena picture is given, along with a list of applications that presently use }{\i Kerberos}{
 for user authentication. We describe the addition of }{\i Kerberos}{ authentication to the Sun Network File System as a case study for integrating }{\i Kerberos}{ with an existing application.
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs24 
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b Introduction}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab This paper gives an overview of }{\i Kerberos,}{ an authentication system designed by Miller and Neuman}{
{\pict{\*\picprop\shplid1025{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag-2042127296\blipupi574{\*\blipuid 86479c4018c1761613aa0cf3fdf9aa50}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e002866040000002d01000008000000320a6a00300001000000310010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
9709de070002ffff00000100010046656e6365730075706572006d616e002c5700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
for open network computing environments, and describes our experience using it at MIT's Project Athena.}{{\pict{\*\picprop\shplid1026{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}
{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag1055940413\blipupi574{\*\blipuid 3ef05f3d92a6ff5edc0cdd1537c6bd06}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100d200d200fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00001200ff00f0020300751aff00840103100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000260074006f00050000000b0226003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e000867040000002d01000008000000320a6000300001000000320010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
7ffffbffffc700007ffffbffffc700007ffffbffffc700007ffffbffffc6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{ In the first section of the paper, we explain why a new authentication model is needed f
or open networks, and what its requirements are. The second section lists the components of the }{\i Kerberos}{ software and describes how they interact in providing the authentication service. In Section 3, we describe the }{\i Kerberos}{ naming scheme.

\par \tab Section 4 presents the building blocks of }{\i Kerberos}{ authentication - the }{\i ticket}{ and the }{\i authenticator.}{ This leads to a discussion of the two authentication protocols: the initial authentication of a user to }{\i Kerberos}{
 (analogous to logging in), and the protocol for mutual authentication of a potential consumer and a potential producer of a network service.
\par }{\i \tab Kerberos}{ requires a database of information about its clients; Section 5 describes the database, its management, and the protocol for its modification. Section 6 describes the }{\i Kerberos}{
 interface to its users, applications programmers, and administrators. In Section 7, we describe how the Project Athena }{\i Kerberos}{ fits into the rest of the Athena environment. We also describe the interaction of different }{\i Kerberos}{ authenticat
ion domains, or }{\i realms ;}{ in our case, the relation between the Project Athena }{\i Kerberos}{ and the }{\i Kerberos}{ running at MIT's Laboratory for Computer Science.
\par \tab In Section 8, we mention open issues and problems as yet unsolved. The last section gives the current status of }{\i Kerberos}{ at Project Athena. In the appendix, we describe in detail how }{\i Kerberos}{
 is applied to a network file service to authenticate users who wish to gain access to remote file systems. 
\par }{\b \tab Conventions.}{ Throughout this paper we use terms that may be ambiguous, new to the reader, or used differently elsewhere. Below we state our use of those terms. 
\par }{\i \tab User, Client, Server.}{ By }{\i user,}{ we mean a human being who uses a program or service. A }{\i client}{ also uses something, but is not necessarily a person; it 
can be a program. Often network applications consist of two parts; one program which runs on one machine and requests a remote service, and another program which runs on the remote machine and performs that service. We call those the }{\i client}{
 side and }{\i server}{ side of the application, respectively. Often, a }{\i client}{ will contact a }{\i server}{ on behalf of a }{\i user.}{
\par \tab Each entity that uses the }{\i Kerberos}{ system, be it a user or a network server, is in one sense a client, since it uses the }{\i Kerberos}{ service. So to distinguish }{\i Kerberos}{ clients from clients of other services, we use the term }{\i 
principal}{ to indicate such an entity. Note that a }{\i Kerberos}{ principal can be either a user or a server. (We describe the naming of }{\i Kerberos}{ principals in a later section.) 
\par \tab }{\i Service vs. Server.}{ We use }{\i service}{ as an abstract specification of some actions to be performed. A process which performs those actions is called a }{\i server.}{ At a given time, there may be several }{\i servers}{
 (usually running on different machines) performing a given }{\i service.}{ For example, at Athena there is one BSD UNIX }{\i rlog-in}{ server running on each of our timesharing machines. 
\par }{\i \tab Key, Private Key, Password. Kerberos}{ uses private key encryption. Each }{\i Kerberos}{ principal is assigned a large number, its private key, known only to that principal and }{\i Kerberos.}{
 In the case of a user, the private key is the result of a one-way function applied to the user's }{\i password.}{ We use }{\i key}{ as shorthand for }{\i private key.}{ 
\par }{\i \tab Credentials.}{ Unfortunately, this word has a special meaning for both the Sun Network File System and the }{\i Kerberos}{ system. We explicitly state whether we mean NFS credentials or }{\i Kerberos}{
 credentials, otherwise the term is used in the normal English language sense. 
\par }{\i \tab Master and Slave.}{ It is possible to run }{\i Kerberos}{ authentication software on more than one machine. However, there is always only one definitive copy of the }{\i Kerberos}{ database. The machine which houses this database is called the }
{\i master}{ machine, or just the }{\i master.}{ Other machines may possess read-only copies of the }{\i Kerberos}{ database, and these are called }{\i slaves.
\par }{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 1. Motivation
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab 
In a non-networked personal computing environment, resources and information can be protected by physically securing the personal computer. In a timesharing computing environment, the operating syste
m protects users from one another and controls resources. In order to determine what each user is able to read or modify, it is necessary for the timesharing system to identify each user. This is accomplished when the user logs in.
\par \tab In a network of users r
equiring services from many separate computers, there are three approaches one can take to access control: One can do nothing, relying on the machine to which the user is logged in to prevent unauthorized access; one can require the host to prove its iden
tity, but trust the host's word as to who the user is; or one can require the user to prove her/his identity for each required service.
\par \tab In a closed environment where all the machines are under strict control, one can use the first approach. When the organization controls all the hosts communicating over the network, this is a reasonable approach.
\par \tab In a more open environment, one might selectively trust only those hosts under organizational control. In this case, each host must be required to prove its ident
ity. The rlog-in and rsh programs use this approach. In those protocols, authentication is done by checking the Internet address from which a connection has been established.
\par \tab In the Athena environment, we must be able to honor requests from hosts that are
 not under organizational control. Users have complete control of their workstations: they can reboot them, bring them up standalone, or even boot off their own tapes. As such, the third approach must be taken; the user must prove her/his identity for eac
h desired service. The server must also prove its identity. It is not sufficient to physically secure the host running a network server; someone elsewhere on the network may be masquerading as the given server.
\par \tab Our environment places several requirements o
n an identification mechanism. First, it must be secure. Circumventing it must be difficult enough that a potential attacker does not find the authentication mechanism to be the weak link. Someone watching the network should not be able to obtain the info
r
mation necessary to impersonate another user. Second, it must be reliable. Access to many services will depend on the authentication service. If it is not reliable, the system of services as a whole will not be. Third, it should be transparent. Ideally, t
he user should not be aware of authentication taking place. Finally, it should be scalable. Many systems can communicate with Athena hosts. Not all of these will support our mechanism, but software should not break if they did.
\par \tab Kerberos is the result of ou
r work to satisfy the above requirements. When a user walks up to a workstation s/he "logs in". As far as the user can tell, this initial identification is sufficient to prove her/his identity to all the required network servers for the duration of the lo
g
-in session. The security of Kerberos relies on the security of several authentication servers, but not on the system from which users log in, nor on the security of the end servers that will be used. The authentication server provides a properly authenti
cated user with a way to prove her/his identity to servers scattered across the network.
\par \tab Authentication is a fundamental building block for a secure networked environment. If, for example, a server knows for certain the identity of a client, it can decide 
whether to provide the service, whether the user should be given special privileges, who should receive the bill for the service, and so forth. In other words, authorization and accounting schemes can be built on top of the authentication that Kerberos pr
ovides, resulting in equivalent security to the lone personal computer or the timesharing system.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 2. What is }{\b\i Kerberos}{\b  ?}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\i \tab Kerberos}{ is a trusted third-party authentication service based on the model presented by Needham and Schroeder.}{
{\pict{\*\picprop\shplid1027{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag-384224347\blipupi574{\*\blipuid e91933a5a379bcc4ce537cf230363f50}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e007e0b040000002d01000008000000320a6a00300001000000330010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
0100010000000000bd0200000000000000000100650099000300a100ff00b20100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{It is trusted in the sense that each of its clients believes }{\i Kerberos'}{
 judgement as to the identity of each of its other clients to be accurate. Time stamps (large numbers representing the current date and time) have been added to the original model to aid in the detection of }{\i replay.}{
 Replay occurs when a message is stolen off the network and resent later. For a more complete description of replay, and other issues of authentication, see Voydock and Kent.}{
{\pict{\*\picprop\shplid1028{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag-2025236322\blipupi574{\*\blipuid 8749589eaf91ac07782350f7e2629d64}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e000900040000002d01000008000000320a6a00300001000000340010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
b74dde070002ffff00000100010046656e6365730075706572006d616e002c5700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 2.1. What Does It Do?}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\i \tab Kerberos}{ keeps a database of its clients and their }{\i private keys. }{The private key is a large number known only to }{\i Kerberos}{
 and the client it belongs to. In the case that the client is a user, it is an encrypted password. Network services requiring authentication register with }{\i Kerberos,}{
 as do clients wishing to use those services. The private keys are negotiated at registration.
\par \tab Because }{\i Kerberos}{ knows these private keys, it can create messages which convince one client that another is really who it claims to be. }{\i Kerberos}{ also generates temporary private keys, called }{\i session keys,}{
 which are given to two clients and no one else. A session key can be used to encrypt messages between two parties.
\par }{\i \tab Kerberos}{ provides three distinct levels of protection. The application programmer determines which is appropriate, according to the requirements of the application. For example, some applications require onl
y that authenticity be established at the initiation of a network connection, and can assume that further messages from a given network address originate from the authenticated party. Our authenticated network file system uses this level of security.

\par \tab Other applications require authentication of each message, but do not care whether the content of the message is disclosed or not. For these, }{\i Kerberos}{ provides }{\i safe messages.}{ Yet a higher level of security is provided by }{\i 
private messages,}{ where each message is not only authenticated, but also encrypted. Private messages are used, for example, by the }{\i Kerberos}{ server itself for sending passwords over the network
\par }{\fs24 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 2.2. Software Components}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab The Athena implementation comprises several modules (see Figure 1). The }{\i Kerberos}{
 applications library provides an interface for application clients and application servers. It contains, among others, routines for creating or reading authentication requests, and the routines for creating safe or private messages.
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\i {\pict{\*\picprop\shplid1029{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw6706\pich5562\picwgoal3802\pichgoal3153\wmetafile8\bliptag1908376934\blipupi-396{\*\blipuid 71bf85667baa27f6ae9c4a9a59bcf885}
010009000003f802000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100ffffffffffffffff0000000000000200030000000000ffffff0000000000ffffff0001000001000000010000
00000001000000000000010c0054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000088006a0079065705050000000b026a008800050000000c02ed04f105030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02a0ff
0000000000009001010000000000001254696d6573204e657720526f6d616e000000040000002d0100000c000000320ac0002001090000004b65726265726f73
20000e00000026060f0012004d72456403000800000090009800ac00b40007000000fc02000000000000ffff040000002d010100040000000201020008000000
fa0206000800080000000000040000002d010200070000001804b800b00094008c00040000000201010015000000fb02a0ff0000000000009001000000000000
001254696d6573204e657720526f6d616e000000040000002d01030004000000f001000010000000320a5001200112000000656e6372797074696f6e206c6962
726172790e00000026060f0012004d72456403000800000090002801ac00440104000000020102000700000018044801b00024018c0004000000020101001000
0000320ae0012001110000006461746162617365206c69627261727920000e00000026060f0012004d7245640300080000009000b801ac00d401040000000201
0200070000001804d801b000b4018c00040000000201010018000000320a700220012100000064617461626173652061646d696e697374726174696f6e207072
6f6772616d7320000e00000026060f0012004d72456403000800000090004802ac00640204000000020102000700000018046802b00044028c00040000000201
010012000000320a000320011600000061646d696e697374726174696f6e20736572766572200e00000026060f0012004d7245640300080000009000d802ac00
f4020400000002010200070000001804f802b000d4028c00040000000201010012000000320a900320011600000061757468656e7469636174696f6e20736572
766572200e00000026060f0012004d72456403000800000090006803ac00840304000000020102000700000018048803b00064038c0004000000020101001200
0000320a200420011500000070726f7061676174696f6e20736f66747761726520000e00000026060f0012004d7245640300080000009000f803ac0014040400
0000020102000700000018041804b000f4038c0004000000020101000e000000320ab00420010e000000757365722070726f6772616d73200e00000026060f00
12004d72456403000800000090008804ac00a4040400000002010200070000001804a804b00084048c0004000000020101000e000000320a400520010d000000
6170706c69636174696f6e7320000e00000026060f0012004d72456403000800000090001805ac00340504000000020102000700000018043805b00014058c00
040000000201010012000000320ac000a00216000000206170706c69636174696f6e73206c6962726172792010000000fb021400090000000000bc0200000000
0102022253797374656d0006040000002d01000004000000f001030008000000fa02050000000000ffffff00040000002d01030004000000f001020007000000
fc020100000000000000040000002d01020004000000f0010100040000002701ffff040000002701ffff030000000000fc07fff0ffbfafffffffffffffffffff
ff80afffffff80f0ffff80f0ffbf0000fe07c0fffe07c0ffffbf6ffffe07fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\i 
\par }\pard \s17\ql \fi1152\li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\i 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 1. }{Kerberos Software Components
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab Encryption in }{\i Kerberos}{ is based on DES, the Data Encryption Standard.}{{\pict{\*\picprop\shplid1030{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag880333808\blipupi574{\*\blipuid 3478d3f0cb94b3231e777a54825cd5c1}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e008a0b040000002d01000008000000320a6a00300001000000350010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
6f72644f626a6563742023303239000000003d00ff000401340010000000fb0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
The encryption library implements those routines. Several methods of encryption are provided, wi
th tradeoffs between speed and security. An extension to the DES Cypher Block Chaining (CBC) mode, called the Propagating CBC mode, is also provided. In CBC, an error is propagated only through the current block of the cipher, whereas in PCBC, the error i
s
 propagated throughout the message. This renders the entire message useless if an error occurs, rather than just a portion of it. The encryption library is an independent module, and may be replaced with other DES implementations or a different encryption
 library.
\par \tab Another replaceable module is the database management system. The current Athena implementation of the database library uses }{\i ndbm,}{ although INGRES was originally used. Other database management libraries could be used as well.
\par \tab The }{\i Kerberos}{ datab
ase needs are straightforward; a record is held for each principal, containing the name, private key, and expiration date of the principal, along with some administrative information. (The expiration date is the date after which an entry is no longer vali
d. It is usually set to a few years into the future at registration.)
\par \tab Other user information, such as real name, phone number, and so forth, is kept by another server, the }{\i Hesiod}{ nameserver.}{{\pict{\*\picprop\shplid1031{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}
{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag-1141278172\blipupi574{\*\blipuid bbf97a247867279199f31132b5426a8b}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e009400040000002d01000008000000320a6a00300001000000360010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
e708de070002ffff00000100010046656e6365730075706572006d616e002c5700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{ This way, sensitive information, namely passwords, can be handled by }{\i Kerberos,}{
 using fairly high security measures; while the non-sensitive information kept by }{\i Hesiod}{ is dealt with differently; it can, for example, be sent unencrypted over the network.
\par \tab The }{\i Kerberos}{ servers use the database library, as do the tools for administering the database.
\par \tab The }{\i administration server}{ (or KDBM server) provides a read-write network interface to the database. The client side of the program may be run on any machine on the network. The server side, however, must run on the machine housing the }{\i 
Kerberos}{ database in order to make changes to the database.
\par \tab The }{\i authentication server }{(or }{\i Kerberos}{ server), on the other hand, performs read-only operations on the }{\i Kerberos}{ database, namely, t
he authentication of principals, and generation of session keys. Since this server does not modify the }{\i Kerberos}{ database, it may run on a machine housing a read-only copy of the master }{\i Kerberos}{ database.
\par \tab Database propagation software manages replication of the }{\i Kerberos}{ database. It is possible to have copies of the database on several different machines, with a copy of the authentication server running on each machine. Each of these }{\i slave
}{ machines receives an update of the }{\i Kerberos}{ database from the }{\i master}{ machine at given intervals.
\par \tab Finally, there are end-user programs for logging in to }{\i Kerberos,}{ changing a }{\i Kerberos}{ password, and displaying or destroying }{\i Kerberos}{ }{\i tickets}{ (tickets are explained later on).
\par }{\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 3. }{\b\i Kerberos}{\b  Names}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Part of authenticating an entit
y is naming it. The process of authentication is the verification that the client is the one named in a request. What does a name consist of? In }{\i Kerberos,}{
 both users and servers are named. As far as the authentication server is concerned, they are equivalent. A name consists of a primary name, an instance, and a realm, expressed as }{\i name.instance@realm}{ (see Figure 2).
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {bcn
\par treese.root
\par jis@LCS.MIT.EDU
\par rlog-in.priam@ATHENA.MIT.EDU
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 2.}{ }{\i Kerberos}{ Names
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab The }{\i primary name}{ is the name of the user or the service. The }{\i instance}{
 is used to distinguish among variations on the primary name. For users, an instance may entail special privileges, such as the "root" or "admin" instances. For services in the Athena environment, the inst
ance is usually the name of the machine on which the server runs. For example, the }{\i rlog-in}{ service has different instances on different hosts: }{\i rlog-in.priam}{ is the }{\i rlog-in}{ server on the host named priam. A }{\i Kerberos}{
 ticket is only good for a single named server. As such, a separate ticket is required to gain access to different instances of the same service. The }{\i realm}{
 is the name of an administrative entity that maintains authentication data. For example, different institutions may each have their own }{\i Kerberos}{ machine, housing a different database. They have different }{\i Kerberos}{
 realms. (Realms are discussed further in section 8.2.).
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 4. How It Works}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab This section describes the }{\i Kerberos}{ authentication protocols. The following abbreviations are used in the figures.
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1032{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw7867\pich8170\picwgoal4460\pichgoal4632\wmetafile8\bliptag1906027016\blipupi-167{\*\blipuid 719baa08dfac26b1d77c90c8c5ab3f44}
0100090000035504000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001008f01ac00fc03e6020000000000000100030000000000ffffff0000000000ffffff0001000001000000000000
0000000100ff00000000010c0054696d6573204e657720526f6d616e0000aaff000055ff000000000000000000100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000030002f0028076c07050000000b022f003000050000000c023d07f806030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02a0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e006600040000002d01000008000000320a9000300001000000630008000000320a
2001300001000000730009000000320ab0013000040000006164647209000000320a40023000040000006c69666510000000fb02a0ff00000000000090010000
00020000001253796d626f6c0049040000002d01010004000000f001000008000000320a90001002020000002d3e08000000320a20011002020000002d3e0800
0000320ab0011002020000002d3e08000000320a40021002020000002d3e15000000fb02a0ff0000000000009001000000000000001254696d6573204e657720
526f6d616e006600040000002d01000004000000f00101000a000000320a9000600306000000636c69656e740a000000320a2001600306000000736572766572
13000000320ab001600318000000636c69656e742773206e6574776f726b206164647265737310000000320a40026003120000006c69666574696d65206f6620
7469636b657412000000320ad0026003160000007469636b65742d6772616e74696e67207365727665720b000000320ad0023000080000007467732c20544753
10000000fb02a0ff0000000000009001000000020000001253796d626f6c0049040000002d01010004000000f001000008000000320ad0021002020000002d3e
08000000320a60031002020000002d3e08000000320af0031002020000002d3e08000000320a80041002020000002d3e15000000fb02a0ff0000000000009001
000000000000001254696d6573204e657720526f6d616e006600040000002d01000004000000f00101000b000000320a60033000080000004b65726265726f73
12000000320a600360031500000061757468656e7469636174696f6e207365727665720009000000320af0033000040000004b44424d08000000320a80043000
010000004b0012000000320af00360031500000061646d696e697374726174696f6e20736572766572000f000000320a800460030f0000007827732070726976
617465206b65790015000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000100040000002d01010004000000f001
000008000000320a9c04870001000000780015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00660004000000
2d01000004000000f001010008000000320a10053000010000004b0010000000fb02a0ff0000000000009001000000020000001253796d626f6c004904000000
2d01010004000000f001000008000000320aa0051002020000002d3e08000000320a10051002020000002d3e08000000320a30061002020000002d3e08000000
320ac0061002020000002d3e08000000320a50071002020000002d3e15000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f
6d616e006600040000002d01000004000000f001010009000000320a2d05870003000000782c790015000000fb02a0ff00000000000090010000000000000012
54696d6573204e657720526f6d616e000100040000002d01010004000000f001000013000000320a100560031700000073657373696f6e206b657920666f7220
7820616e642079000a000000320aa0053000060000007b6162637d4b15000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f
6d616e006600040000002d01000004000000f001010008000000320ac205550102000000207815000000fb02a0ff000000000000900100000000000000125469
6d6573204e657720526f6d616e000100040000002d01010004000000f001000013000000320aa00560031800000061626320656e6372797074656420696e2078
2773206b657908000000320a3006300001000000540015000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e006600
040000002d01000004000000f001010009000000320a4d0660000400000020782c7915000000fb02a0ff0000000000009001000000000000001254696d657320
4e657720526f6d616e000100040000002d01010004000000f001000008000000320ac006300001000000410008000000320a500730000200000057530d000000
320a500760030b000000776f726b73746174696f6e0011000000320ac00660031300000061757468656e74696361746f7220666f7220780011000000320a3006
600313000000782773207469636b657420746f2075736520790015000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d61
6e006600040000002d01000004000000f001010008000000320ad806860001000000780010000000fb021400090000000000bc02000000000102022253797374
656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff03000000000001005553454e49582e444f430017000120296f181b9e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab 
\par \tab As mentioned above, the }{\i Kerberos}{ authentication model is based on the Needham and Schroeder key distribution protocol. When a user requests a service, her/his identity must be established. To do this, a ticket is pr
esented to the server, along with proof that the ticket was originally issued to the user, not stolen. There are three phases to authentication through }{\i Kerberos.}{
 In the first phase, the user obtains credentials to be used to request access to other services. In the second phase, the user requests authentication for a specific service. In the final phase, the user presents those credentials to the end server.

\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 4.1 Credentials}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab There are two types of credentials used in the }{\i Kerberos}{ authentication model: }{\i tickets}{ and }{\i authenticators.}{
 Both are based on private key encryption, but they are encrypted using different keys. A ticket is used to securely pass the identity of the person to whom the ticket was issued between the authentication server and the end server. 
A ticket also passes information that can be used to make sure that the person using the ticket is the same person to which it was issued. The authenticator contains the additional information which, when compared against that in the ticket proves that th
e client presenting the ticket is the same one to which the ticket was issued.
\par \tab A ticket is good for a single server and a single client. It contains the name of the server, the name of the client, the Internet address of the client, a time stamp, a lifetim
e, and a random session key. This information is encrypted using the key of the server for which the ticket will be used. Once the ticket has been issued, it may be used multiple times by the named client to gain access to the named server, until the tick
et expires. Note that because the ticket is encrypted in the key of the server, it is safe to allow the user to pass the ticket on to the server without having to worry about the user modifying the ticket (see Figure 3).
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b {\pict{\*\picprop\shplid1033{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw6391\pich614\picwgoal3623\pichgoal348\wmetafile8\bliptag-1316908646\blipupi575{\*\blipuid b181919a0346770c54dda1b413974f38}
0100090000033c01000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010096009600fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000000000
0000000100c000000000010c0054696d6573204e657720526f6d616e00e0ffc0ffc00000ffff0000ffffff0078100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000030003a00d905c500050000000b023a003000050000000c028b00a905030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02a0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e006600040000002d0100001a000000320a90003000260000007b732c20632c2061
6464722c2074696d657374616d702c206c6966652c204b20202020207d4b15000000fb02b0ff0000000000009001000000000000001254696d6573204e657720
526f6d616e004200040000002d01010004000000f00100000d000000320ab20098040c000000732c6320202020202020207310000000fb021400090000000000
bc02000000000102022253797374656d0006040000002d01000004000000f0010100040000002701ffff040000002701ffff030000000000a26747802d2a79c2
176117616081c8065e302bb1a9ff0f17209033176116f70617200d1a800fccb100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\b 
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 3.}{ Kerberos Ticket.
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab Unlike the ticket, the authenticator can only be used once. A new one must be generated each time a client wants to use a service. This does not present a problem because the client is able to build the authenticator itself. An 
authenticator contains the name of the client, the workstation's IP address, and the current workstation time. The authenticator is encrypted in the session key that is part of the ticket (see Figure 4).
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b {\pict{\*\picprop\shplid1034{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw4598\pich591\picwgoal2607\pichgoal335\wmetafile8\bliptag-656142553\blipupi576{\*\blipuid d8e40f2756c0380fb1b3e8d79e457715}0100090000033201000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010096009600fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100c000000000010c0054696d6573204e657720526f6d616e00e0ffc0ffc00000ffff0000ffffff0078100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000030003a004304c000050000000b023a003000050000000c0286001304030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02a0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e006600040000002d01000014000000320a900030001a0000007b632c2061646472
2c2074696d657374616d707d204b2020202015000000fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00000004000000
2d01010004000000f001000009000000320aad00ad0304000000732c632010000000fb021400090000000000bc02000000000102022253797374656d00060400
00002d01000004000000f0010100040000002701ffff040000002701ffff0300000000004e6577001456de072c57d6606f058457475614564756de070031ffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 4.}{ A }{\i Kerberos}{ Authenticator
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 4.2. Getting the Initial Ticket}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab When the user walks up to a workstation, only one piece of information can pr
ove her/his identity: the user's password. The initial exchange with the authentication server is designed to minimize the chance that the password will be compromised, while at the same time not allowing a user to properly authenticate her/himself withou
t knowledge of that password. The process of logging in appears to the user to be the same as logging in to a timesharing system. Behind the scenes, though, it is quite different (see Figure 5).
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }{{\pict{\*\picprop\shplid1035{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw10231\pich1341\picwgoal5800\pichgoal760\wmetafile8\bliptag-936001760\blipupi-455{\*\blipuid c835bf209773d14c593dda2d09aa615c}
010009000003b801000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000580078016809a802050000000b0278015800050000000c0230011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00ffff040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c0704000000020101000b000000320a40028007080000004b65726265726f730b00000026060f000c004d724564010002000000000008000000
25030200a0021002200710020b00000026060f000c004d7245640100020000000000080000002503020020071002c00640020b00000026060f000c004d724564
0100020000000000080000002503020020071002c006e0010a000000320ae001200406000000632c2074677310000000fb021400090000000000bc0200000000
0102022253797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000
fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000490015000220317d141bd1fe00005553
454e49582e5400180001207456141b800e00004d41434b5645522e575249001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }{\b 
\par }{{\pict{\*\picprop\shplid1036{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw10231\pich1602\picwgoal5800\pichgoal908\wmetafile8\bliptag-1278119476\blipupi-432{\*\blipuid b3d171cc1caa746efe8fb6046831130e}
010009000003fe01000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000580078016809e302050000000b0278015800050000000c026b011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000300040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c0704000000020101000b000000320a40028007080000004b65726265726f730b00000026060f000c004d724564010002000000000008000000
25030200a00210022007100217000000320aa0020003200000007b4b202020202020202c207b54202020202020207d204b2020202020207d204b15000000fb02
b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00ffff040000002d01030004000000f00102001c000000320ad00260032a00
000020632c746773202020202020202020632c746773202020202020202020746773202020202020202020630b00000026060f000c004d724564010002000000
00000800000025030200a00210020003e0010b00000026060f000c004d72456401000200000000000800000025030200a00210020003400210000000fb021400
090000000000bc02000000000102022253797374656d0006040000002d01020004000000f001030008000000fa02050000000000ffffff00040000002d010300
04000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff03000000000080800000
2b00000003010c000000000000000000c0c0c000ff00000000ff0000ffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\b 
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 5.}{ Getting the Initial Ticket.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24 
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab 
The user is prompted for her/his username. Once it has been entered, a request is sent to the authentication server containing the user's name and the name of a special service known as the }{\i ticket-granting service.}{
\par \tab The authentication server checks that it knows about the client. If so, it generates a random session key which will later be used between the client and the ticket-granting server. It then creates a ticket for the ticket-granting
 server which contains the client's name, the name of the ticket-granting server, the current time, a lifetime for the ticket, the client's IP address, and the random session key just created. This is all encrypted in a key known only to the ticket-granti
ng server and the authentication server.
\par \tab The authentication server then sends the ticket, along with a copy of the random session key and some additional information, back to the client. This response is encrypted in the client's private key, known only to }{\i Kerberos}{
 and the client, which is derived from the user's password.
\par \tab Once the response has been received by the client, the user is asked for her/his password. The password is converted to a DES key and used to decrypt the response from the authentication
 server. The ticket and the session key, along with some of the other information, are stored for future use, and the user's password and DES key are erased from memory.
\par \tab Once the exchange has been completed, the workstation possesses information that it c
an use to prove the identity of its user for the lifetime of the ticket-granting ticket. As long as the software on the workstation had not been previously tampered with, no information exists that will allow someone else to impersonate the user beyond th
e life of the ticket.
\par }{\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 4.3. Requesting a Service}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab 
For the moment, let us pretend that the user already has a ticket for the desired server. In order to gain access to the server, the application builds an authenticator containing the client's name and IP ad
dress, and the current time. The authenticator is then encrypted in the session key that was received with the ticket for the server. The client then sends the authenticator along with the ticket to the server in a manner defined by the individual applica
tion.
\par \tab Once the authenticator and ticket have been received by the server, the server decrypts the ticket, uses the session key included in the ticket to decrypt the authenticator, compares the information in the ticket with that in the authenticator, the I
P address from which the request was received, and the present time. If everything matches, it allows the request to proceed (see Figure 6).
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1037{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw10231\pich1473\picwgoal5800\pichgoal835\wmetafile8\bliptag-2034680978\blipupi-443{\*\blipuid 86b93b6e4d94f24fc9c19007f90482eb}
010009000003f501000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000058005a016809a802050000000b025a015800050000000c024e011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000000040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c0704000000020101000a000000320a4002b007060000005365727665720b00000026060f000c004d7245640100020000000000080000002503
0200a0021002200710020b00000026060f000c004d7245640100020000000000080000002503020020071002c00640020b00000026060f000c004d7245640100
020000000000080000002503020020071002c006e00113000000320ab0010003170000007b412020207d4b20202020202c207b5420202020207d4b0015000000
fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00b401040000002d01030004000000f001020018000000320ae0016003
2200000020632020202020202020632c73202020202020202020632c7320202020202020207310000000fb021400090000000000bc0200000000010202225379
7374656d0006040000002d01020004000000f001030008000000fa02050000000000ffffff00040000002d01030004000000f001010007000000fc0201000000
00000000040000002d01010004000000f0010000040000002701ffff040000002701ffff03000000000016d138113606232dc80916d1c9093e06c52d460516d100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 6.}{ Requesting a Service
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab It is assumed that clocks are synchronized to w
ithin several minutes. If the time in the request is too far in the future or the past, the server treats the request as an attempt to replay a previous request. The server is also allowed to keep track of all past requests with time stamps that are still
 valid. In order to further foil replay attacks, a request received with the same ticket and time stamp as one already received can be discarded.
\par \tab Finally, if the client specifies that it wants the server to prove its identity too, the server adds one to th
e time stamp the client sent in the authenticator, encrypts the result in the session key, and sends the result back to the client (see Figure 7).
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par 
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }{\b 
\par }{{\pict{\*\picprop\shplid1038{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw10231\pich1602\picwgoal5800\pichgoal908\wmetafile8\bliptag2126564450\blipupi-432{\*\blipuid 7ec0cc623f4cea072614a5e6fcc42df2}
010009000003e301000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000580078016809e302050000000b0278015800050000000c026b011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000000040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c0704000000020101000a000000320a4002b007060000005365727665720b00000026060f000c004d7245640100020000000000080000002503
0200a00210022007100210000000320aa0029003110000007b74696d657374616d70202b20317d204b0015000000fb02b0ff0000000000009001000000000000
001254696d6573204e657720526f6d616e000000040000002d01030004000000f001020009000000320ad002600603000000632c73000b00000026060f000c00
4d72456401000200000000000800000025030200a00210020003e0010b00000026060f000c004d72456401000200000000000800000025030200a00210020003
400210000000fb021400090000000000bc02000000000102022253797374656d0006040000002d01020004000000f001030008000000fa02050000000000ffff
ff00040000002d01030004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff
0300000000006f757473696465206f66207468652064726177696e672061726500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\b 
\par 
\par 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 7.}{ Mutual Authentication
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab At the end of this exchange, the server is certain that, according to }{\i Kerberos,}{
 the client is who it says it is. If mutual authentication occurs, the client is also convinced that the server is authentic. Moreover, the client and server share a key which n
o one else knows, and can safely assume that a reasonably recent message encrypted in that key originated with the other party.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 4.4 Getting Server Tickets
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Recall that a ticket is only good for a single server. As such, it is necessary to obtain a separat
e ticket for each service the client wants to use. Tickets for individual servers can be obtained from the ticket-granting service. Since the ticket-granting service is itself a service, it makes use of the service access protocol described in the previou
s section.
\par \tab When a program requires a ticket that has not already been requested, it sends a request to the ticket-granting server (see Figure 8). The request contains the name of the server for which a ticket is requested, along with the ticket-granting ti
cket and an authenticator built as described in the previous section.
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1039{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw10231\pich1473\picwgoal5800\pichgoal835\wmetafile8\bliptag731640277\blipupi-443{\*\blipuid 2b9bf1d5b8c991b510ad99c00efc5d8f}
010009000003f701000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
0800000058005a016809a802050000000b025a015800050000000c024e011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e009802040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c07040000000201010009000000320a4002e00703000000544753000b00000026060f000c004d72456401000200000000000800000025030200
a0021002200710020b00000026060f000c004d7245640100020000000000080000002503020020071002c00640020b00000026060f000c004d72456401000200
00000000080000002503020020071002c006e00114000000320ab001a00219000000732c7b54202020202020207d4b20202020202c7b4120207d4b0015000000
fb02b0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000300040000002d01030004000000f00102001a000000320ae0013003
2500000020632c7467732020202020202020746773202020202020202063202020202020632c7467730010000000fb021400090000000000bc02000000000102
022253797374656d0006040000002d01020004000000f001030008000000fa02050000000000ffffff00040000002d01030004000000f001010007000000fc02
0100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff0300000000000000f8ff0000fdff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1040{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw10231\pich1602\picwgoal5800\pichgoal908\wmetafile8\bliptag1998123018\blipupi-432{\*\blipuid 7718f00aa58db96dde1bf08a033ba990}
010009000003f601000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001003c003c00fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
00000001000100000000010c0053797374656d000301b60504001a010301c50504001b010300dc0501004c1f03100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000580078016809e302050000000b0278015800050000000c026b011009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d72456403000800000060008001
a002a00207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a402a4027c015c00
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00ffff040000002d01
02000a000000320a4002f00006000000436c69656e740e00000026060f0012004d724564030008000000200780016009a0020400000002010200070000001804
a40264097c011c07040000000201010009000000320a4002e00703000000544753000b00000026060f000c004d72456401000200000000000800000025030200
a00210022007100213000000320aa0020003180000007b7b5420202020207d4b2020202c204b2020202020207d4b15000000fb02b0ff00000000000090010000
00000000001254696d6573204e657720526f6d616e000000040000002d01030004000000f00102001a000000320ad00290032500000020632c73202020202020
2020732020202020202020632c732020202020202020632c746773000b00000026060f000c004d72456401000200000000000800000025030200a00210020003
e0010b00000026060f000c004d72456401000200000000000800000025030200a00210020003400210000000fb021400090000000000bc020000000001020222
53797374656d0006040000002d01020004000000f001030008000000fa02050000000000ffffff00040000002d01030004000000f001010007000000fc020100
000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff0300000000000080020000800200009ff20000901200009ff20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b Figure 8.}{ Getting a Server Ticket
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs24 
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab The ticket-granting server then checks the authenticator and ticket-granting tick
et as described above. If valid, the ticket-granting server generates a new random session key to be used between the client and the new server. It then builds a ticket for the new server containing the client's name, the server name, the current time, th
e client's IP address and the new session key it just generated. The lifetime of the new ticket is the minimum of the remaining life for the ticket-granting ticket and the default for the service.
\par \tab The ticket-granting server then sends the ticket, along wit
h the session key and other information, back to the client. This time, however, the reply is encrypted in the session key that was part of the ticket-granting ticket. This way, there is no need for the user to enter her/his password again. Figure 9 summa
rizes the authentication protocols.
\par }\pard \s17\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par 
\par }\pard \s17\qc \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1041{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw11077\pich5359\picwgoal6280\pichgoal3038\wmetafile8\bliptag921745576\blipupi-149{\*\blipuid 36f0b8a82e6839b13faeb1a411a96c78}
0100090000031103000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d0001005a005a00fc03b2022302240100000200030000000000ffffff0000000000ffffff0001000001000000010000
00000001000000000000010c0054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000004801e800180ba705050000000b02e8004801050000000c02bf04d009030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d7245640300080000005001f000
30039f0207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a3023403ec004c01
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00d401040000002d01
02000b000000320ae0018001080000004b65726265726f730e00000026060f0012004d7245640300080000009006f00070089f02040000000201020007000000
1804a3027408ec008c06040000000201010009000000320ae001200703000000544753000e00000026060f0012004d724564030008000000c003f003a0059f05
0400000002010200070000001804a305a405ec03bc0304000000020101000a000000320ab00420040600000020557365722f0e00000026060f0012004d724564
0300080000003009f003100b9f050400000002010200070000001804a305140bec032c0904000000020101000a000000320ae004900906000000536572766572
0a000000320a1005200406000000436c69656e740b00000026060f000c004d72456401000200000000000800000025030200a005e004b007a0020b0000002606
0f000c004d72456401000200000000000800000025030200a005e0043009e0040b00000026060f000c004d72456401000200000000000800000025030200de08
b9043009e0040b00000026060f000c004d72456401000200000000000800000025030200de0814053009e0040b00000026060f000c004d724564010002000000
00000800000025030200a005e0040006b0040b00000026060f000c004d72456401000200000000000800000025030200a005e004d00580040b00000026060f00
0c004d72456401000200000000000800000025030200b004f0039006e0010b00000026060f000c004d724564010002000000000008000000250302002b06fc01
9006e0010b00000026060f000c004d72456401000200000000000800000025030200860640029006e0010b00000026060f000c004d7245640100020000000000
080000002503020026030502b004f0030b00000026060f000c004d72456401000200000000000800000025030200c003e0041002a0020b00000026060f000c00
4d724564010002000000000008000000250302001e0200031002a0020b00000026060f000c004d724564010002000000000008000000250302001002a0027002
d0020b00000026060f000c004d7245640100020000000000080000002503020098048b03b004f0030b00000026060f000c004d72456401000200000000000800
000025030200b004f0035004c00308000000320ac003700201000000310008000000320ad002f00301000000320008000000320ad00270050100000033000800
0000320a9003600601000000340008000000320ab004500701000000350010000000fb021400090000000000bc02000000000102022253797374656d00060400
00002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc02010000000000000004000000
2d01010004000000f0010000040000002701ffff040000002701ffff0300000000004d72456401000200000000000800000025030200b004f0039006e0010b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 
\par \tab \tab 1. Request for TGS ticket
\par \tab \tab 2. Ticket for TGS
\par \tab \tab 3. Request for Server ticket
\par \tab \tab 4. Ticket for Server
\par \tab \tab 5. Request for service
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 9. }{\i Kerberos}{ Authentication Protocols.
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 5. }{\b\i Kerberos}{\b  Database}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Up to this point, we have discussed operations requiring read-only access to the }{\i Kerberos}{
 database. These operations are performed by the authentication service, which can run on both master and slave machines (see Figure 10).
\par .
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1042{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw8534\pich6197\picwgoal4838\pichgoal3513\wmetafile8\bliptag1774861599\blipupi-233{\*\blipuid 69ca3d1fb775f569ca5216b0be6bbd49}
010009000003f602000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100ffffffffffffffff00004b0000000200030000000000ffffff0000000000ffffff0001000001000000000000
00000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000b8009a0047081706050000000b029a00b800050000000c027d058f07030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d724564030008000000c0002001
3f029f0207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04a30243021c01bc00
0e00000026060f0012004d724564030008000000c00320013f059f02070000001b04a30243051c01bc030e00000026060f0012004d724564030008000000c006
20013f089f02070000001b04a30243081c01bc060e00000026060f0012004d72456403000800000040022004bf039f05070000001b04a305c3031c043c020e00
000026060f0012004d72456403000800000040052004bf069f05070000001b04a305c3061c043c05040000002e011800040000000201010015000000fb02a0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e00ffff040000002d01020009000000320af0002001030000002057530009000000
320af0002004030000002057530009000000320af000200703000000205753000a000000320a000670020600000020536c6176650a000000320a000670050600
00004d61737465720b00000026060f000c004d72456401000200000000000800000025030200000320048004a0020b00000026060f000c004d72456401000200
0000000008000000250302008004a002000620040b00000026060f000c004d72456401000200000000000800000025030200000320048007a0020b0000002606
0f000c004d72456401000200000000000800000025030200000620048007a0020b00000026060f000c004d724564010002000000000008000000250302008001
a002000320040b00000026060f000c004d724564010002000000000008000000250302008001a002000620040b00000026060f000c004d724564010002000000
00000800000025030200c602c503000320040b00000026060f000c004d72456401000200000000000800000025030200a202e703000320040b00000026060f00
0c004d72456401000200000000000800000025030200000320043903c8030b00000026060f000c004d7245640100020000000000080000002503020000032004
6003e2030b00000026060f000c004d72456401000200000000000800000025030200000320046c030d040b00000026060f000c004d7245640100020000000000
0800000025030200000620045b06e9030b00000026060f000c004d72456401000200000000000800000025030200000620043006ca030b00000026060f000c00
4d72456401000200000000000800000025030200d005c803000620040b00000026060f000c004d72456401000200000000000800000025030200a205e4030006
20040b00000026060f000c004d724564010002000000000008000000250302008f050b040006200410000000fb021400090000000000bc020000000001020222
53797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100
000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff0300000000000039fff20041003afff20042003bfff20043003c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 10.}{ Authentication Requests.
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab In this section, we discuss operations that require write access to the database. These operations are performed by the administration service, called the }{\i Kerberos}{ Database Management Service }{\i (KDBM).}{
 The current implementation stipulates that changes may only be made to the master }{\i Kerberos}{ database; slave copies are read-only. Therefore, the KDBM server may only run on the master }{\i Kerberos}{ machine (see Figure 11).
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1043{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw8534\pich6197\picwgoal4838\pichgoal3513\wmetafile8\bliptag1735212159\blipupi-233{\*\blipuid 676d3c7fd57bf33f36ce9d491f04a9bc}
0100090000038602000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100ffffffffffffffff00004b0000000200030000000000ffffff0000000000ffffff0001000001000000000000
00000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000b8009a0047081706050000000b029a00b800050000000c027d058f07030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d724564030008000000c0002001
3f029f0207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04a30243021c01bc00
0e00000026060f0012004d724564030008000000c00320013f059f02070000001b04a30243051c01bc030e00000026060f0012004d724564030008000000c006
20013f089f02070000001b04a30243081c01bc060e00000026060f0012004d72456403000800000040022004bf039f0508000000fa0201000000000000000000
040000002d01020004000000f00101000400000002010100070000001b049f05bf03200440020e00000026060f0012004d72456403000800000040052004bf06
9f05040000000201020008000000fa0206000800080000000000040000002d01010004000000f0010200070000001b04a305c3061c043c05040000002e011800
040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00941e040000002d01020009000000320a
f0002001030000002057530009000000320af0002004030000002057530009000000320af000200703000000205753000a000000320a00067002060000002053
6c6176650a000000320a00067005060000004d61737465720b00000026060f000c004d724564010002000000000008000000250302008004a002000620040b00
000026060f000c004d72456401000200000000000800000025030200000620048007a0020b00000026060f000c004d7245640100020000000000080000002503
02008001a002000620040b00000026060f000c004d72456401000200000000000800000025030200000620045b06e9030b00000026060f000c004d7245640100
0200000000000800000025030200000620043006ca030b00000026060f000c004d72456401000200000000000800000025030200d005c803000620040b000000
26060f000c004d72456401000200000000000800000025030200a205e403000620040b00000026060f000c004d72456401000200000000000800000025030200
8f050b040006200410000000fb021400090000000000bc02000000000102022253797374656d0006040000002d01030004000000f001020008000000fa020500
00000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff0400
00002701ffff03000000000020546f2e2e2e094374726c2b457363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }{\b 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 11.}{ Administration Requests
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab 
Note that, while authentication can still occur (on slaves), administration requests cannot be serviced if the master machine is down. In our experience, this has not presented a problem, as administration requests are infrequent.
\par \tab The KDBM handles requests from users to change their passwords. The client side of this program, which sends requests to the KDBM over the network, is the }{\i kpasswd}{ program. The KDBM also accepts requests from }{\i Kerberos}{
 administrators, who may add principals to the database, as well as change passwords for existing principals. The client side of the administration program, which also sends requests to the KDBM over the network, is the }{\i kadmin}{ program.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 5.1. The KDBM Server
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab 
The KDBM server accepts requests to add principals to the database or change the passwords for existing principals. This service is unique in that the ticket-granting service will not issue tickets for it. Instead, the authentication service itself must b
e
 used (the same service that is used to get a ticket-granting ticket). The purpose of this is to require the user to enter a password. If this were not so, then if a user left her/his workstation unattended, a passerby could walk up and change her/his pas
sword for them, something which should be prevented. Likewise, if an administrator left her/his workstation unguarded, a passerby could change any password in the system.
\par \tab When the KDBM server receives a request, it authorizes it by comparing the authentica
ted principal name of the requester of the change to the principal name of the target of the request. If they are the same, the request is permitted. If they are not the same, the KDBM server consults an access control list (stored in a file on the master
 }{\i Kerberos}{ system). If the requester's principal name is found in this file, the request is permitted, otherwise it is denied.
\par \tab By convention, names with a. }{\b NULL}{ instance (the default instance) do not appear in the access control list file; instead, an }{\b admin}{ instance is used. Therefore, for a user to become an administrator of }{\i Kerberos}{ an }{\b admin}{
 instance for that username must be created, and added to the access control list. This convention allows an administrator to use a different password for }{\i Kerberos}{ administration then s/he would use for normal log-in.
\par \tab All requests to the KDBM program, whether permitted or denied, are logged.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 5.2. The }{\b\i kadmin}{\b  and }{\b\i kpasswd}{\b  Programs
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Administrators of }{\i Kerberos}{ use the }{\i kadmin}{ program to add principals to the database, or cha
nge the passwords of existing principals. An administrator is required to enter the password for their }{\i admin}{ instance name when they invoke the }{\i kadmin}{ program. This password is used to fetch a ticket for the KDBM server (see Figure 12).

\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {{\pict{\*\picprop\shplid1044{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw8114\pich5359\picwgoal4600\pichgoal3038\wmetafile8\bliptag1752312156\blipupi-309{\*\blipuid 6872295c568a445e636a20fd2afe57d5}
0100090000036802000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100ffffffffffffffff0000000000000200030000000000ffffff0000000000ffffff0001000001000000010000
00000001000000000000010c0054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000004801e8007808a705050000000b02e8004801050000000c02bf043007030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d7245640300080000005001f000
30039f0207000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804a3023403ec004c01
040000002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e000200040000002d01
02000b000000320ae0018001080000004b65726265726f730e00000026060f0012004d7245640300080000009006f00070089f02040000000201020007000000
1804a3027408ec008c06040000000201010009000000320ae001f006040000004b44424d0e00000026060f0012004d724564030008000000c003f003a0059f05
0400000002010200070000001804a305a405ec03bc0304000000020101000a000000320ab00420040600000020557365722f0a000000320a1005200406000000
436c69656e740b00000026060f000c004d724564010002000000000008000000250302005a052704f00670020b00000026060f000c004d724564010002000000
0000080000002503020089069102f00670020b00000026060f000c004d72456401000200000000000800000025030200dd06dc02f00670020b00000026060f00
0c004d724564010002000000000008000000250302002b030602b004f0030b00000026060f000c004d72456401000200000000000800000025030200c003e004
1002a0020b00000026060f000c004d724564010002000000000008000000250302001e0200031002a0020b00000026060f000c004d7245640100020000000000
08000000250302001002a0027002d0020b00000026060f000c004d7245640100020000000000080000002503020098048b03b004f0030b00000026060f000c00
4d72456401000200000000000800000025030200b004f0035004c00308000000320ac003700201000000310008000000320ad002f00301000000320008000000
320a2903ef0501000000330010000000fb021400090000000000bc02000000000102022253797374656d0006040000002d01030004000000f001020008000000
fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701
ffff040000002701ffff03000000000070089f020400000002010200070000001804a3027408ec008c06040000000201010009000000320ae00120070300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }\pard \s17\ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab \tab 
\par \tab \tab 1. Request for KDBM ticket
\par \tab \tab 2. Ticket for KDBM
\par \tab \tab 3. }{\i kadmin}{ or }{\i kpasswd}{ request
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 12.}{ Kerberos Administration Protocol.
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par \tab Users may change their }{\i Kerberos}{ passwords using the }{\i kpasswd}{ program. They are required to enter their old password when they invoke the program. This password is used to fetch a ticket for the KDBM server.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 5.3. Database Replication}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Each }{\i Kerberos}{ realm has a }{\i master}{ }{\i Kerberos}{
 machine, which houses the master copy of the authentication database. It is possible (although not necessary) to have additional, read-only copies of the database on }{\i slave}{
 machines elsewhere in the system. The advantages of having multiple copies of the d
atabase are those usually cited for replication: higher availability and better performance. If the master machine is down, authentication can still be achieved on one of the slave machines. The ability to perform authentication on any one of several mach
ines reduces the probability of a bottleneck at the master machine.
\par \tab Keeping multiple copies of the database introduces the problem of data consistency. We have found that very simple methods suffice for dealing with inconsistency. The master database is du
mped every hour. The database is sent, in its entirety, to the slave machines, which then update their own databases. A program on the master host, called }{\i kprop,}{ sends the update to a peer program, called }{\i kpropd,}{
 running on each of the slave machines (see Figure 13). First }{\i kprop}{ sends a checksum of the new database it is about to send. The checksum is encrypted in the }{\i Kerberos}{ master database key, which both the master and slave }{\i Kerberos}{
 machines possess. The data is then transferred over the network to the }{\i kpropd}{
 on the slave machine. The slave propagation server calculates a checksum of the data it has received, and if it matches the checksum sent by the master, the new information is used to update the slave's database.
\par }\pard\plain \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b 
\par 
\par }{{\pict{\*\picprop\shplid1045{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw8534\pich5350\picwgoal4838\pichgoal3033\wmetafile8\bliptag-659210407\blipupi-283{\*\blipuid d8b53f59f2b10490783dbfb9d377d817}
0100090000038002000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d000100ffffffffffffffff0000000000000200030000000000ffffff0000000000ffffff0001000001000000000000
00000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
08000000b8009a0047085705050000000b029a00b800050000000c02bd048f07030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f0012004d724564030008000000c000c003
3f02de0407000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04e2044302bc03bc00
0e00000026060f0012004d724564030008000000c003c0033f05de04070000001b04e2044305bc03bc030e00000026060f0012004d724564030008000000c006
c0033f08de04070000001b04e2044308bc03bc060e00000026060f0012004d724564030008000000c00320013f053e02070000001b04420243051c01bc030400
00002e011800040000000201010015000000fb02a0ff0000000000009001000000000000001254696d6573204e657720526f6d616e00ffff040000002d010200
0a000000320a4005f0000600000020536c6176650a000000320a4005f0030600000020536c6176650a000000320a4005f0060600000020536c6176650a000000
320af000f003060000004d61737465720b00000026060f000c004d72456401000200000000000800000025030200800440028001c0030b00000026060f000c00
4d72456401000200000000000800000025030200800440028004c0030b00000026060f000c004d72456401000200000000000800000025030200800440028007
c0030b000000320a2004c0000800000020206b70726f70640b000000320a2004c0030800000020206b70726f70640b000000320a2004c0060800000020206b70
726f70640a000000320a1002f00306000000206b70726f700b00000026060f000c004d72456401000200000000000800000025030200be0189038001c0030b00
000026060f000c004d724564010002000000000008000000250302008001c003d901aa030b00000026060f000c004d7245640100020000000000080000002503
02008004c0039d0481030b00000026060f000c004d724564010002000000000008000000250302005e047f038004c0030b00000026060f000c004d7245640100
0200000000000800000025030200460786038007c0030b00000026060f000c004d724564010002000000000008000000250302002707ad038007c00310000000
fb021400090000000000bc02000000000102022253797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff0004000000
2d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
2701ffff040000002701ffff03000000000020546f2e2e2e094374726c2b457300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\b 
\par 
\par 
\par }\pard \qc \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Figure 13. }{Database Propagation
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\tab All passwords in the }{\i Kerberos}{
 database are encrypted in the master database key Therefore, the information passed from master to slave over the network is not useful to an eavesdropper. However, it is essential that only
 information from the master host be accepted by the slaves, and that tampering of data be detected, thus the checksum.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 6. }{\b\i Kerberos}{\b  From the Outside Looking In
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab The section will describe }{\i Kerberos}{ from the practical point of view, first as seen by the user
, then from the application programmer's viewpoint, and finally, through the tasks of the }{\i Kerberos}{ administrator.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 6.1. User's Eye View}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab If all goes well, the user will hardly notice that }{\i Kerberos}{ is present. In our UNIX implementation, the ticket-granting ticket is obtained from }{\i Kerberos}{
 as part of the }{\i log-in}{ process. The changing of a user's }{\i Kerberos}{ password is part of the }{\i passwd}{ program. And }{\i Kerberos}{ tickets are automatically destroyed when a user logs out.
\par \tab If the user's log-in session lasts longer than the lifetime of the ticket-granting ticket (currently 8 hours), the user will notice }{\i Kerberos'}{ presence because the next time a }{\i Kerberos -authenticated}{
 application is executed, it will fail. The }{\i Kerberos}{ ticket for it will have expired. At that point, the user can run the }{\i kinit}{
 program to obtain a new ticket for the ticket-granting server. As when logging in, a password must be provided in order to get it. A user executing the }{\i klist}{ command out of curiosity may be surprised at all the tickets which have s
ilently been obtained on her/his behalf for services which require }{\i Kerberos}{ authentication.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 6.2. From the Programmer's Viewpoint
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab A programmer writing a }{\i Kerberos}{ application will often be adding authentication to an already existing network application co
nsisting of a client and server side. We call this process "Kerberizing" a program. Kerberizing usually involves making a call to the }{\i Kerberos}{
 library in order to perform authentication at the initial request for service. It may also involve calls to the DES library to encrypt messages and data which are subsequently sent between application client and application server.
\par \tab The most commonly used library functions are }{\i krb_mk_req}{ on the client side, and }{\i krb_rd_req}{ on the server side. The }{\i krb_mk_req}{ routine ta
kes as parameters the name, instance, and realm of the target server, which will be requested, and possibly a checksum of the data to be sent. The client then sends the message returned by the }{\i krb_mk_req}{
 call over the network to the server side of the application. When the server receives this message, it makes a call to the library routine }{\i krb_rd_req.}{ The routine returns a judgement about the authenticity of the sender's alleged identity.
\par \tab If the application requires that messages sent between client and server be secret, then library calls can be made to }{\i krb_mk_priv (krb_rd_priv)}{ to encrypt (decrypt) messages in the session key which both sides now share.}{
{\pict{\*\picprop\shplid1046{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag-1902014585\blipupi574{\*\blipuid 8ea18f8728898e7cf70c40bd22d4c55d}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e000100040000002d01000008000000320a6a00300001000000370010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
020000000000006e000000000000000000000081110001000b0001000800000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\up6 
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 6.3. The }{\b\i Kerberos}{\b  Administrator's Job}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab The }{\i Kerberos}{ administrator's j
ob begins with running a program to initialize the database. Another program must be run to register essential principals in the database, such as the }{\i Kerberos}{ administrator's name with an }{\b admin }{instance. The }{\i Kerberos}{
 authentication server and the administration server must be started up. If there are slave databases, the administrator must arrange that the programs to propagate database updates from master to slaves be kicked off periodically.
\par After these initial steps have been taken, the administrator manipulates the database over the network, using the }{\i kadmin}{ program. Through that program, new principals can be added, and passwords can be changed.
\par \tab In particular, when a new }{\i Kerberos}{ application is added to the system, the }{\i Kerberos}{ administrator must take
 a few steps to get it working. The server must be registered in the database, and assigned a private key (usually this is an automatically generated random key). Then, some data (including the server's key) must be extracted from the database and install
ed in a file on the server's machine. The default file is }{\i /etc/srvtab.}{ The }{\i krb_rd_req}{
 library routine called by the server (see the previous section) uses the information in that file to decrypt messages sent encrypted in the server's private key. The }{\i /etc/srvtab}{
 file authenticates the server as a password typed at a terminal authenticates the user.
\par \tab The }{\i Kerberos}{ administrator must also ensure that }{\i Kerberos}{ machines are physically secure, and would also be wise to maintain backups of the Master database.}{
{\pict{\*\picprop\shplid1047{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag880840060\blipupi574{\*\blipuid 34808d7c08013c06b5d115f815e30668}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e000f08040000002d01000008000000320a6a00300001000000380010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
77fc77fc77fc77fe77fc77fc77fc77fc77fc77fd77fc77fc8ffc8ffc8ffc8ffc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\up6 
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 7. The Bigger Picture}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab In this section, we describe how }{\i Kerberos}{
 fits into the Athena environment, including its use by other network services and applications, and how it interacts with remote }{\i Kerberos}{ realms. For a more complete description of the Athena environment, please see G. W. Treese.}{
{\pict{\*\picprop\shplid1048{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}
\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw300\pich323\picwgoal170\pichgoal183\wmetafile8\bliptag1567299817\blipupi574{\*\blipuid 5d6b18e91af3e982028dfca033459fe4}
0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300074007900050000000b0230003000050000000c0249004400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e004100040000002d01000008000000320a6a00300001000000390010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
000000000002ffff00000100010046656e6365730075706572006d616e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{\up6 
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 7.1. Other Network Services' Use of }{\b\i Kerberos}{\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab Several network applications have been modified to use }{\i Kerberos.}{ The }{\i rlog-in}{ and }{\i rsh}{ commands first try to authenticate using }{\i Kerberos.}{
 A user with valid }{\i Kerberos}{ tickets can rlog-in to another Athena machine without having to set up.}{\i rhosts}{ files. If the }{\i Kerberos}{ authentication fails, the programs fall back on their usual methods of authorization, in this case, the.}
{\i rhosts}{ files.
\par \tab We have modified the Post Office Protocol to use }{\i Kerberos}{ for authenticating users who wish to retrieve their electronic mail from the "post office". A message delivery program, called }{\i Zephyr,}{ has been recently de
veloped at Athena, and it uses }{\i Kerberos}{ for authentication as well.}{{\pict{\*\picprop\shplid1049{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw441\pich323\picwgoal250\pichgoal183\wmetafile8\bliptag-1697641716\blipupi575{\*\blipuid 9ad00b0c2af06aeb660e8c3a36f31eec}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300094007900050000000b0230003000050000000c0249006400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e006600040000002d01000008000000320a6a00300002000000313010000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
ffffffffffffffffffeaa9ffffffffffffbff7fffffffffffeffdfffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par \tab The program for signing up new users, called }{\i register,}{ uses both the Service Management System (SMS)}{{\pict{\*\picprop\shplid1050{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}
{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw441\pich323\picwgoal250\pichgoal183\wmetafile8\bliptag1299234653\blipupi575{\*\blipuid 4d70bf5da5ea5d563db2b5eaa4c41706}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300094007900050000000b0230003000050000000c0249006400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e000004040000002d01000008000000320a6a00300002000000313110000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
0000020001002000400001000100340100000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{ and }{\i Kerberos.}{ From SMS
, it determines whether the information entered by the would-be new Athena user, such as name and MIT identification number, is valid. It then checks with }{\i Kerberos}{
 to see if the requested username is unique. If all goes well, a new entry is made to the }{\i Kerberos}{ database, containing the username and password.
\par \tab For a detailed discussion of the use of }{\i Kerberos}{ to secure Sun's Network File System, please refer to the appendix..
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 7.2. Interaction with Other Kerberi}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab It is expected that different administrative organizations will want to use }{\i Kerberos}{
 for user authentication. It is also expected that in many cases, users in one organization will want to use services in another. }{\i Kerberos}{ supports multiple administrative domains. The specification of names in }{\i Kerberos}{
 includes a field called the }{\i realm.}{ This field contains the name of the administrative domain within which the user is to be authenticated.
\par \tab Services are usually registered in a single realm and will only accept credentials issued by an authentication ser
ver for that realm. A user is usually registered in a single realm (the local realm), but it is possible for her/him to obtain credentials issued by another realm (the remote realm), on the strength of the authentication provided by the local realm. Crede
n
tials valid in a remote realm indicate the realm in which the user was originally authenticated. Services in the remote realm can choose whether to honor those credentials, depending on the degree of security required and the level of trust in the realm t
hat initially authenticated the user.
\par \tab In order to perform cross-realm authentication, it is necessary that the administrators of each pair of realms select a key to be shared between their realms. A user in the local realm can then request a ticket-grantin
g ticket from the local authentication server for the ticket-granting server in the remote realm. When that ticket is used, the remote ticket-granting server recognizes that the request is not from its own realm, and it uses the previously exchanged key t
o decrypt the ticket-granting ticket. It then issues a ticket as it normally would, except that the realm field for the client contains the name of the realm in which the client was originally authenticated.
\par \tab This approach could be extended to allow one to 
authenticate oneself through a series of realms until reaching the realm with the desired service. In order to do this, though, it would be necessary to record the entire path that was taken, and not just the name of the initial realm in which the user wa
s authenticated. In such a situation, all that is known by the server is that A says that B says that C says that the user is so-and-so. This statement can only be trusted if everyone along the path is also trusted.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 8. Issues and Open Problems}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab There are a number of issues and open problems associated with the }{\i Kerberos}{
 authentication mechanism.  Among the issues are how to decide the correct lifetime for a ticket, how to allow proxies, and how to guarantee workstation integrity.
\par \tab The ticket lifetime problem
 is a matter of choosing the proper tradeoff between security and convenience. If the life of a ticket is long, then if a ticket and its associated session key are stolen or misplaced, they can be used for a longer period of time. Such information can be 
s
tolen if a user forgets to log out of a public workstation. Alternatively, if a user has been authenticated on a system that allows multiple users, another user with access to root might be able to find the information needed to use stolen tickets. The pr
oblem with giving a ticket a short lifetime, however, is that when it expires, the user will have to obtain a new one which requires the user to enter the password again.
\par \tab An open problem is the proxy problem. How can an authenticated user allow a server to
 acquire other network services on her/his behalf? An example where this would be important is the use of a service that will gain access to protected files directly from a fileserver. Another example of this problem is what we call }{\i 
authentication forwarding.}{
 If a user is logged into a workstation and logs in to a remote host, it would be nice if the user had access to the same services available locally, while running a program on the remote host. What makes this difficult is that the user might not trust 
the remote host, thus authentication forwarding is not desirable in all cases. We do not presently have a solution to this problem.
\par \tab Another problem, and one that is important in the Athena environment, is how to guarantee the integrity of the software run
ning on a workstation. This is not so much of a problem on private workstations since the user that will be using it has control over it. On public workstations, however, someone might have come along and modified the }{\i log-in}{
 program to save the user's pass
word. The only solution presently available in our environment is to make it difficult for people to modify software running on the public workstations. A better solution would require that the user's key never leave a system that the user knows can be tr
usted. One way this could be done would be if the user possessed a }{\i smartcard}{ capable of doing the encryptions required in the authentication protocol.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 9. Status}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab A prototype version of }{\i Kerberos}{ went into production in September of 1986. Since January of 1987, }{\i Kerberos}{
 has been Project Athena's sole means of authenticating its 5,000 users, 650 workstations, and 65 servers. In addition, }{\i Kerberos}{ is now being used in place of.}{\i rhosts}{ files for controlling access in several of Athena's timesharing systems.

\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b 10. Acknowledgments
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\i \tab Kerberos}{
 was initially designed by Steve Miller and Clifford Neuman with suggestions from Jeff Schiller and Jerry Saltzer. Since that time, numerous other people have been involved with the project. Among them are Jim Aspnes, Bob Baldwin, 
John Barba, Richard Basch, Jim Bloom, Bill Bryant, Mark Colan, Rob French, Dan Geer, John Kohl, John Kubiatowicz, Bob Mckie, Brian Murphy, John Ostlund Ken Raeburn, Chris Reed, Jon Rochlis, Mike Shanzer, Bill Sommerfeld, Ted T'so, Win Treese, and Stan Zan
arotti.
\par \tab We are grateful to Dan Geer, Kathy Lieben, Josh Lubarr, Ken Raeburn, Jerry Saltzer, Ed Steiner, Robbert van Renesse, and Win Treese whose suggestions much improved earlier drafts of this paper.
\par \tab The illustration on the title page is by Betsy Bruemmer.
\par 
\par 
\par 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Appendix
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b\i Kerberos}{\b  Application to Sun's Network File System (NFS)
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab A key component of the Project Athena workstation system is the interposing of the network between the 
user's workstation and her/his private file storage (home directory). All private storage resides on a set of computers (currently VAX 11/750s) that are dedicated to this purpose. This allows us to offer services on publicly available UNIX workstations. W
hen a user logs in to one of these publicly available workstations, rather then validate her/his name and password against a locally resident password file, we use }{\i Kerberos}{ to determine her/his authenticity. The }{\i log-in}{ program prompts f
or a username (as on any UNIX system). This username is used to fetch a }{\i Kerberos}{ ticket-granting ticket. The }{\i log-in}{
 program uses the password to generate a DES key for decrypting the ticket. If decryption is successful, the user's home directory is located by consulting the }{\i Hesiod}{ naming service and mounted through NFS. The }{\i log-in}{
 program then turns control over to the user's shell, which then can run the traditional per-user customization files because the home directory is now "attached" to the workstation. The }{\i Hesiod}{
 service is also used to construct an entry in the local password file. (This is for the benefit of programs that look up information in }{\i /etc/passwd.)}{
\par \tab From several options for delivery of remote file service, we chose Sun's Network File Syste
m. However this system fails to mesh with our needs in a crucial way. NFS assumes that all workstations fall into two categories (as viewed from a file server's point of view): trusted and untrusted. Untrusted systems cannot access any files at all, trust
e
d can. Trusted systems are completely trusted. It is assumed that a trusted system is managed by friendly management. Specifically, it is possible from a trusted workstation to masquerade as any valid user of the file service system and thus gain access t
o just about every file on the system. (Only files owned by "root" are exempted.).
\par \tab In our environment, the management of a workstation (in the traditional sense of UNIX system management) is in the hands of the user currently using it. We make no secret of
 the root password on our workstations, as we realize that a truly unfriendly user can break in by the very fact that s/he is sitting in the same physical location as the machine and has access to all console functions. Therefore we cannot truly trust our
 workstations in the NFS interpretation of trust. To allow proper access controls in our environment we had to make some modifications to the base NFS software, and integrate }{\i Kerberos}{ into the scheme.
\par }{\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Unmodified NFS
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab In the implementation of NFS that we st
arted with (from the University of Wisconsin), authentication was provided in the form of a piece of data included in each NFS request (called a "credential" in NFS terminology). This credential contains information about the unique user identifier (UID) 
o
f the requester and a list of the group identifiers (GIDs) of the requester's membership. This information is then used by the NFS server for access checking. The difference between a trusted and a non-trusted workstation is whether or not its credentials
 are accepted by the NFS server.}{{\pict{\*\picprop\shplid1051{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}
{\sp{\sn fLine}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0
\picw441\pich323\picwgoal250\pichgoal183\wmetafile8\bliptag913228355\blipupi575{\*\blipuid 366ec24352ac428b68b4243c564a6064}0100090000030001000002005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a000000
26060f00a9004d72456402009f0000009d00010000000000fc03b2020000000000000100030000000000ffffff0000000000ffffff0001000001000000010000
0000000100000000000001080054696d6573204e657720526f6d616e00015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff
00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d7245640300
080000003000300094007900050000000b0230003000050000000c0249006400030000001e000400000003010800050000000102ffffff000500000009020000
000004000000070103000400000004010d0004000000060101000400000002010200030000001e00040000002e011800040000000201010015000000fb02c0ff
0000000000009001000000000000001254696d6573204e657720526f6d616e006600040000002d01000008000000320a6a00300002000000313210000000fb02
1400090000000000bc02000000000102022253797374656d0006040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000
000002000100200040000100010034010000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}{
\par }{\b 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Modified NFS
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab In our environment, NFS servers must accept credentials from a workstation if and only if the credentials indicate the UID of the workstation's user, and no other.
\par \tab One obvious solution would be to change the nature of credentials from mere indicators of UID and GIDs to full blown }{\i Kerberos}{
 authenticated data. However a significant performance penalty would be paid if this solution were adopted. Credentials are exchanged on every NFS operation including all disk read and write activities. Including a }{\i Kerberos}{
 authentication on each disk transaction would add a fair number of full-blown encryptions (done in software) per transaction and, according to our envelope calculations, would
 have delivered unacceptable performance. (It would also have required placing the }{\i Kerberos}{ library routines in the kernel address space.)
\par \tab We needed a hybrid approach, described below. The basic idea is to have the NFS server map credentials received from
 client workstations, to a valid (and possibly different) credential on the server system. This mapping is performed in the server's kernel on each NFS transaction and is setup at "mount" time by a user-level process that engages in }{\i Kerberos -}{
 moderated authentication prior to establishing a valid kernel credential mapping.
\par \tab To implement this we added a new system call to the kernel (required only on server systems, not on client systems) that provides for the control of the mapping function that maps incom
ing credentials from client workstations to credentials valid for use on the server (if any). The basic mapping function maps the tuple:
\par }\pard \s17\qc \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 { <CLIENT-IP-ADDRESS, UID-ON-CLIENT>
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {to a valid NFS credential on the server system. The CLIENT-IP-ADDRESS is extracted 
from the NFS request packet and the UID-ON-CLIENT is extracted from the credential supplied by the client system. Note: all information in the client-generated credential except the UID-ON-CLIENT is discarded.
\par \tab If no mapping exists, the server reacts in on
e of two ways, depending it is configured. In our friendly configuration we default the unmappable requests into the credentials for the user "nobody" who has no privileged access and has a unique UID. Unfriendly servers return an NFS access error when no
 valid mapping can be found for an incoming NFS credential.
\par \tab Our new system call is used to add and delete entries from the kernel resident map. It also provides the ability to flush all entries that map to a specific UID on the server system, or flush all entries from a given CLIENT-IP-ADDRESS.
\par \tab We modified the mount daemon (which handles NFS mount requests on server systems) to accept a new transaction type, the }{\i Kerberos}{ authentication mapping request. Basically, as part of the mounting process, the client system provides a }{\i 
Kerberos}{ authenticator along with an indication of her/his UID-ON-CLIENT (encrypted in the }{\i Kerberos}{ authenticator) on the workstation. The server's mount daemon converts the }{\i Kerberos}{ principal name into a local username. This username is
 then looked up in a special file to yield the user's UID and GIDs list. For efficiency, this file is a }{\i ndbm}{
 database file with the username as the key. From this information, an NFS credential is constructed and handed to the kernel as the valid mapping of the <CLIENT-IP-ADDRESS, CLIENT-UID> tuple for this request.
\par \tab At unmount time a request is sent to the mount daemon to remove the previously added mapping from the kernel. It is also possible to send a request at log-out time to invalidate all mapping for
 the current user on the server in question, thus cleaning up any remaining mappings that exist (though they shouldn't) before the workstation is made available for the next user.
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b Security Implications of the Modified NFS}{
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\tab This implementation is not compl
etely secure. For starters, user data is still sent across the network in an unencrypted, and therefore interceptable, form. The low-level, per-transaction authentication is based on a <CLIENT-IP-ADDRESS, CLIENT-UID> pair provided unencrypted in the reque
s
t packet. This information could be forged and thus security compromised. However, it should be noted that only while a user is actively using her/his files (i.e., while logged in) are valid mappings in place and therefore this form of attack is limited t
o when the user in question is logged in. When a user is not logged in, no amount of IP address forgery will permit unauthorized access to her/his files.
\par 
\par 
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b References}{
\par }\pard \s17\ql \fi-720\li720\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin720\itap0 {
\par }\pard \s17\ql \fi-360\li360\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin360\itap0 {1.\tab S. P. Miller, B. C. Neuman, J. I. Schiller, and J. H. Saltzer, }{\i Section E.2.1: Kerberos Authentication and Authorization System}{
, M.I.T. Project Athena, Cambridge, Massachusetts (December 21, 1987). 
\par 2.\tab E. Balkovich, S. R. Lerman, and R. P. Parmelee, "Computing in Higher Education: The Athena Experience," }{\i Communications of the ACM.}{ }{\b 28}{(11), pp. 1214-1224, ACM (November, 1985).
\par 3.\tab R. M. Needham and M. D. Schroeder, "Using Encryption for Authentication in Large Networks of Computers," }{\i Communications of the ACM}{ }{\b 21}{(12), pp. 993-999 (December, 1978). 
\par 4.\tab V. L. Voydock and S. T. Kent, "Security Mechanisms in High-Level Network Protocols," }{\i Computing Surveys}{ }{\b 15}{(2), ACM (June 1983).
\par 5.\tab National Bureau of Standards, "Data Encryption Standard," Federal Information Processing Standards Publication 46, Government Printing Office, Washington, D.C. (1977). 
\par 6.\tab S. P. Dyer, "Hesiod," in }{\i Usenix Conference Proceedings}{ (Winter, 1988). 
\par 7.\tab W. J. Bryant, }{\i Kerberos Programmer's Tutorial}{, M.I.T. Project Athena (In preparation). 
\par 8.\tab W. J. Bryant, }{\i Kerberos Administrator's Manual}{, M.I.T. Project Athena (In preparation).
\par 9.\tab G. W. Treese, "Berkeley Unix on 1000 Workstations: Athena Changes to 4.3BSD," in }{\i Usenix Conference Proceedings}{ (Winter, 1988)
\par 10.\tab C. A. DellaFera, M. W. Eichin, R. S. French, D. C. Jedlinsky, J. T. Kohl, and W. E. Sommerfeld, "The Zephyr Notification System," in }{\i Usenix Conference Proceedings}{ (Winter, 1988).
\par 11.\tab M. A. Rosenstein, D. E. Geer, and P. J. Levine, in }{\i Usenix Conference Proceedings}{ (Winter, 1988).
\par }\pard \s17\ql \li0\ri0\sb120\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {12.\tab R. Sandberg, D. Goldberg, S. Kleiman, D. Walsh, and B. Lyon, "Design and Implementation of the Sun Network Filesystem," in }{\i Usenix Conference Proceedings }{
(Summer, 1985).\page }{\cs15\b\f0\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18 
 Kerberos Timing Issues}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_TIME}}K
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  time}}}{\b\f0 Kerberos Timing Issues
\par }\pard\plain \s16\ql \li0\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f0 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
To resynchronize your computer's clock to the network's clock, manually set it, or run the leash32 Synchronize Time Command.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s31\ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Why Do It...
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Kerberos authentication uses time stamps as part of its protocol. When the clocks of the Kerberos server and your com
puter are too far out of synchronization, you cannot authenticate properly.
\par \page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Error 8}}#
{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  KRB_UNKNOWN_USER}}K{\footnote\ftnalt \pard\plain 
\s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  error, 8}}}{Kerberos Error 8: Unknown username, instance, or realm.
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {This error usually occurs when the username is not know
n for the designated realm. For example, at the time of this writing, there is no user "zzwn" in the Athena realm, so entering zzwn as a username will generate this error. 
\par 
\par Check the entered username or realm name for spelling mistakes or the wrong case.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Error 57}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  KRB_UNKNOWN_REALM}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  error, 57}}}{Kerberos Error 57: Cannot contact the Kerberos server for the selected realm.
\par 
\par This error has three common causes:
\par }\pard \ql \fi-540\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {1.\tab The realm is misspelled, e.g. pbh@AHTENA.MIT.EDU instead of pbh@ATHENA.MIT.EDU (realms are case sensitive).
\par 2.\tab Your krb.con file contains an entry for ATHENA.MIT.EDU but not athena.mit.edu.
\par 3.\tab The realm is missing from your KRB.CON file, which should be located in your \\net\\kerb directory. If you suspect the problem is with your KRB.CON 
file, either call the Network Help Desk, 3-4101, or copy the /etc/krb.conf file from a nearby UNIX workstation to your \\net\\kerb\\krb.con file.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Kerberos Error 62}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  KRB_INCORR_PASSWD}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  error, 62}}}{Kerberos Error 62: Password incorrect.
\par 
\par This means that either you have misspelled your password or you have gotten the case wrong. Check the state of your CAPS Lock key.
\par 
\par Characters do not echo to the screen or cause a beep when you type your password so that nearby users won't be able to tell how many letters are in your password.\page }{\cs15\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Invalid Principle}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  LSH_INVPRINCIPAL}}K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0
\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 \f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  error, invalid principal}}}{Invalid principal.
\par 
\par This usually means that you just clicked on the OK button or pressed Enter without typing your username. \page }{\cs15\b\super ${\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super $}{\f1\fs18  Acknowledgements}}#{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super #}{\f1\fs18  ID_HELP_PEOPLE}}}{\cs15\super K{\footnote\ftnalt \pard\plain \s18\ql \li120\ri0\sl-240\slmult0\nowidctlpar\faauto\adjustright\rin0\lin120\itap0 
\f5\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\f1\fs18\super K}{\f1\fs18  acknowledgements}}}{\b Acknowledgments
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b The People To Thank at Brown University...
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {...are the DOS Developers who worked on the Kerberos DDL:
\par Peter Tan (who, as a Brown University student, did most of the initial port)
\par Eliel Mamousette (currently reachable at Systems Constructs in NYC)
\par Penny Theodore (who created the Kerberos icon)
\par James Mathiesen
\par 
\par }\pard \ql \li0\ri0\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 {\b The People To Thank at MIT...}{
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {... are DOS Developers Paul Hill, Jason Sachs, Scott Hills, Danilo Almeida.
\par Marlene Gast worked on the Help system, Susan Jones proofread.
\par product released by Jonathan Hunt and Tom Thornton.
\par }}